<?php/**************************************************************************** LivSNS 0.1* (C)2004-2010 HOGE Software.** $Id: comment.php 7586 2013-07-05 09:40:56Z yaojian $***************************************************************************/require_once './global.php';include_once CUR_CONF_PATH . 'lib/comment.class.php';define('MOD_UNIQUEID', 'comment');  //模块标识class commentApi extends appCommonFrm{	private $api;		public function __construct()	{		parent::__construct();		$this->api = new comment();	}	public function __destruct()	{		parent::__destruct();		unset($this->api);	}		/**	 * 获取评论数据	 */	public function show()	{		$offset = isset($this->input['offset']) ? intval($this->input['offset']) : 0;		$count = isset($this->input['count']) ? intval($this->input['count']) : 20;		$condition = $this->filter_data();		$data = array(			'offset' => $offset,			'count' => $count,			'flag' => true,			'condition' => $condition		);		$comment_info = $this->api->show($data);		$this->setXmlNode('comment_info', 'comment');		if ($comment_info)		{			$user_ids = array();			foreach ($comment_info as $comment)			{				$user_ids[$comment['user_id']] = $comment['user_id'];			}			//获取用户头像信息			$user_ids = implode(',', $user_ids);			$member_info = $this->getMemberInfo($user_ids);			foreach ($comment_info as $k => $v)			{			    if ($member_info[$v['user_id']])			    {			        $comment_info[$k]['user'] = $member_info[$v['user_id']];			    }				$this->addItem($comment_info[$k]);			}		}		$this->output();	}		/**	 * 获取评论总数	 */	public function count()	{		$info = $this->api->count(array(), true);		echo json_encode($info);	}		/**	 * 发表评论	 */	public function create()	{		$id = intval($this->input['id']);		if ($id <= 0) $this->errorOutput(PARAM_WRONG);		$photo_info = $this->api->detail('photos', array('id' => $id, 'state' => 1), 'albums_id');		if (!$photo_info) $this->errorOutput(OBJECT_NULL);		$content = trim(urldecode($this->input['comment_con']));		if (empty($content)) $this->errorOutput(PARAM_WRONG);		//屏蔽字判断		include_once ROOT_PATH . 'lib/class/banword.class.php';		$banword = new banword();		$words = $banword->exists($content);		if ($words)		{			$keywords = array();			foreach ($words as $v)			{				$keywords[] = $v['banname'];			}			$keywords = implode(',', $keywords);		}		$insertData = array(			'albums_id' => $photo_info['albums_id'],			'photo_id' => $id,			'content' => $content,			'user_id' => $this->user['user_id'],			'user_name' => $this->user['user_name'],			'org_id' => $this->user['org_id'],			'appid' => $this->user['appid'],			'appname' => $this->user['display_name'],			'create_time' => TIMENOW,			'ip' => hg_getip()		);		if ($keywords)		{			$insertData['banwords'] = $keywords;			$insertData['isbanword'] = 1;		}		if (INIT_AUDIT) $insertData['state'] = 1;		$result = $this->api->create($insertData);		if ($result)		{			//更新数据			$updateData = array('comment_total' => 1);			if (INIT_AUDIT) $updateData['comment_num'] = 1;			$this->api->update('photos', $updateData, array('id' => $id), true);			$this->api->update('albums', $updateData, array('id' => $photo_info['albums_id']), true);			$this->addItem($result);		}		$this->output();	}		/**	 * 过滤查询数据	 */	private function filter_data()	{		$photo_id = isset($this->input['photo_id']) ? intval($this->input['photo_id']) : 0;		return array(			'photo_id' => $photo_id		);	}		/**	 * 获取会员信息	 * @param Int|String $user_id	 */	private function getMemberInfo($user_id)	{	    if ($this->input['latest'])	    {	        //新会员	        include_once ROOT_PATH . 'lib/class/members.class.php';    		$newMember = new members();    		$member_info = $newMember->get_members($user_id);    		if ($member_info)    		{    		    $memberInfo = array();    		    foreach ($member_info as $v)    		    {    		        $memberInfo[$v['member_id']]['id'] = $v['member_id'];    		        $memberInfo[$v['member_id']]['nick_name'] = $v['member_name'];    		        $memberInfo[$v['member_id']]['avatar'] = $v['avatar'];    		    }    		}	    }	    else	    {	        include_once ROOT_PATH . 'lib/class/member.class.php';    		$member = new member();    		$member_info = $member->getMemberById($user_id);    		$member_info = $member_info[0];    		if ($member_info)    		{    		    $memberInfo = array();    		    foreach ($member_info as $k => $v)    		    {    		        $memberInfo[$k]['id'] = $v['id'];    		        $memberInfo[$k]['nick_name'] = $v['nick_name'];    		        $memberInfo[$k]['avatar'] = $v['avatar'];    		    }    		}	    }	    return $memberInfo;	}}$out = new commentApi();$action = $_INPUT['a'];if (!method_exists($out,$action)){	$action = 'show';}$out->$action();?>