<?phpclass activityLib extends InitFrm{	function __construct()	{		parent::__construct();	}		function __destruct()	{		parent::__destruct();	}			//insert activity	public function insertActivity($data)	{		$result = false;		if(is_array($data))		{			$sql = $sp = '';			$sql .= "insert into " . DB_PREFIX . "activity set ";//TODO			foreach ($data as $k=>$v)			{				$sql .= $sp . $k . "='". $v . "'";				$sp = ',';			}			$this->db->query($sql);			$result = $this->db->insert_id();		}		return $result;	}		//update activity	public function updateActivity($data, $op = true, $ck = true)	{		$result = false;		if(is_array($data))		{			$sql = $sp = '';			$sql .= "update " . DB_PREFIX . "activity set ";//TODO			if(count($data) > 1)			{				foreach ($data as $k=>$v)				{					if($k != 'action_id')					{						$sql .= $sp . $k . "=";						if($op)						{							$sql .= $k . "+" ;						}						$sql .= "'" . $v ."'";						$sp = ',';					}				}				}			$sql .= " where action_id in ( ". $data['action_id'] . ")";			if($ck)			{				$sql .= " and state = 1";			}			$result = $this->db->query($sql);		}		return $result;	}	//detele activity	public function deteleActivity($data, $ck = true)	{		$result = false;		if(is_array($data))		{			$sql = '';			$sql .= "update " . DB_PREFIX . "activity ";//TODO			$sql .= " state = " . $data['state'];			$sql .= " where action_id in (". $data['action_id'] .")";			if($ck)			{				$sql .= " and state = 1";			}			$result = $this->db->query($sql);		}		return $result;	}		//获取值vals选取值，conds限制	public function getActivity($vals = '*', $conds = array(),  $offset = 0, $count = 1, $ck = true)	{		$result = false;		$sql = " select ". $vals ." from " . DB_PREFIX . "activity ";//TODO		$sql .= " where 1 ";				if($conds)		{			foreach($conds as $k =>$v)			{				$sql .= " and " . $k . "='" . $v ."'"; 			}		}				if($ck)		{			//$sql .= " and state = 1 ";		}		if($count > 0)		{			$sql .= ' LIMIT ' . $offset . ' , ' . $count;		}		if(strpos($vals, ',') || $vals =='*')		{			$result = $this->db->fetch_all($sql);		}		else 		{			$result = $this->db->result_first($sql);		}		return $result;	}		//获取值	public function updateData($action_id, $data, $ck = '')	{		$result = false;		$sql = '';		$sql = " update " . DB_PREFIX . "activity set ";		if($data)		{			$sp =  '';			foreach($data as $k =>$v)			{				$sql .= $sp . $k . "=";				if($ck)				{					$sql .= $k . $ck;				}				$sql .= "'" . $v ."'";			}			$sql .= " where 1 and action_id in ( " . $action_id . ") and state = 1";			$result = $this->db->query($sql);		}				return $result;	}	/*******Apply********/	//insert activityApply	public function insertActivityApply($data)	{		$result = false;		if(is_array($data))		{			$sql = $sp = '';			$sql .= "insert into " . DB_PREFIX . "activity_apply set ";//TODO			foreach ($data as $k=>$v)			{				$sql .= $sp . $k . "='". $v . "'";				$sp = ',';			}			$this->db->query($sql);			$result = $this->db->insert_id();		}		return $result;	}		//update activityApply	public function updateActivityApply($data = array(), $ck = true)	{		$result = false;		if(is_array($data))		{			$sql = $sp = '';			$sql .= "update " . DB_PREFIX . "activity_apply set ";//TODO			if(count($data) > 1)			{				foreach ($data as $k=>$v)				{					if($k != 'action_id' && $k != 'id' && $k != 'user_id')					{						$sql .= $sp . " ". $k . "=";						if($ck)						{							$sql .= $k . "+";						}						$sql .= "'" . $v . "'";						$sp = ',';					}				}				}			$sql .= " where 1";			if($data['action_id'])			{				$sql .= " and action_id in ( ". $data['action_id'] .")" ;			}			if($data['id'])			{				$sql .= " and id in ( ". $data['id'] .")" ;			}			if($data['user_id'])			{				$sql .= " and user_id in ( ". $data['user_id'] .")" ;			}			$result = $this->db->query($sql);		}		return $result;	}	//detele activity	public function deteleActivityApply($data, $ck = true)	{		$result = false;		if(is_array($data))		{			$sql = '';			$sql .= "update " . DB_PREFIX . "activity_apply set state = " . $data['state'];//TODO			$sql .= " where 1 ";			if(count($data))			{				foreach($data as $k=>$v)				{					if($k != 'state')					{						$sql .= " and " . $k . "in(" . $v . ")";					}				}			}			$result = $this->db->query($sql);		}		return $result;	}		//获取值vals选取值，conds限制	public function getActivityApply($vals = '*', $conds = array(),  $offset = 0, $count = 1, $ck = true)	{		$result = false;		$sql = " select ". $vals ." from " . DB_PREFIX . "activity_apply ";//TODO		$sql .= " where 1 ";				if($conds)		{			foreach($conds as $k =>$v)			{				if ($k == 'apply_status' || $k == 'action_id' || $k == 'id' || $k == 'user_id')				{					$sql .= " and " . $k . " in (" . $v .")"; 				}				else 				{					$sql .= " and " . $k . "='" . $v ."'"; 				}			}		}				if($ck)		{			//$sql .= " and state = 1 ";		}			if($count > 0)		{			$sql .= ' LIMIT ' . $offset . ' , ' . $count;		}print_r($sql);exit;		if(strpos($vals, ',') || $vals =='*')		{			$result = $this->db->fetch_all($sql);		}		else 		{			$result = $this->db->result_first($sql);		}		return $result;	}	public function insert($table,$data)	{		$result = false;		if(is_array($data))		{			$sql = $sp = "";			$sql .= "insert into " . DB_PREFIX . $table . " set ";			foreach ($data as $k =>$v)			{				$sql .= $sp . $k ."='" . $v . "'";				$sp = ','; 			}			$this->db->query($sql);			$result = $this->db->insert_id();		}		return $result;	}		public function update($table, $data = array(), $conds = array(), $ck = array())	{		$result = false;		if($data)		{			$sql = $sp = '';			$sql .= "update " . DB_PREFIX . $table . " set ";			foreach ($data as $k => $v)			{				$sql .= $sp . $k . "=";				if(isset($ck[$k]))				{					$sql .= $k . "+";				}				$sql .= "'" . $v . "'";				$sp = ',';			}			$sql .= " where 1";			if($conds)			{				foreach ($conds as $k => $v)				{					if(strpos($v, ','))					{						$sql .= " and " . $k . " in (" . $v . ")";					}					else 					{						$sql .= " and " . $k . " = '" . $v . "'";					}				}			}			$result = $this->db->query($sql);		}			return $result;	}		public function get($table, $vals = '*', $conds = array(),  $offset = 0, $count = 1,  $sequence = array(), $func = '', $group = array())	{		$result = false;		$sql = " select ". $vals ." from " . DB_PREFIX . $table." ";		$sql .= " where 1 ";		if($func)		{				foreach($func as $k =>$v)				{					$sql .= " and " . $k . $v ." ";				}		}				if($conds)		{			foreach($conds as $k =>$v)			{				if(strpos($v, ','))				{					$sql .= " and " . $k . " in (" . $v . ")";				}				else 				{					$sql .= " and " . $k . " = '" . $v . "'";				}			}		}		if($group)		{			$sql .= " group BY ";$sp = '';			foreach ($group as $k=>$v)			{				$sql .= $sp . " " . $k . " " . $v;				$sp = ',';			}		}		if($sequence)		{			$sql .= " ORDER BY ";$sp = '';			foreach ($sequence as $k=>$v)			{				$sql .= $sp . " " . $k . " " . $v;				$sp = ',';			}		}		if($count > 0)		{			$sql .= ' LIMIT ';			$sql .= ($offset)  ? $offset . ' , '  : '';			$sql .= $count;		}			    $query = $this->db->query($sql);				if($count != 1)		{			while($row = $this->db->fetch_array($query))			{				$result[] = $row;			}		}		else 		{			if(strpos($vals, ',') || $vals =='*')			{				while($row = $this->db->fetch_array($query))				{					$result = $row;				}			}			else 			{				while($row = $this->db->fetch_row($query))				{					$result = $row['0'];				}			}					}		return $result;	}		public function getActivitys($table, $vals = '*', $conds = array(),  $offset = 0, $count = 1,  $sequence = array(), $func = '')	{		$result = false;		$sql = " select ". $vals ." from " . DB_PREFIX . $table." a,". DB_PREFIX ."team t ";		$sql .= " where 1 ";		if($func)		{				foreach($func as $k =>$v)				{					$sql .= " and a." . $k . $v ." ";				}		}				if($conds)		{			foreach($conds as $k =>$v)			{				if(strpos($v, ','))				{					$sql .= " and a." . $k . " in (" . $v . ")";				}				else 				{					$sql .= " and a." . $k . " = '" . $v . "'";				}			}		}		$sql .= " and t.state=1 and t.team_id=a.team_id ";		if($sequence)		{			$sql .= " ORDER BY ";$sp = '';			foreach ($sequence as $k=>$v)			{				$sql .= $sp . " a." . $k . " " . $v;				$sp = ',';			}		}		if($count > 0)		{			$sql .= ' LIMIT ';			$sql .= ($offset)  ? $offset . ' , '  : '';			$sql .= $count;		}			    $query = $this->db->query($sql);				if($count != 1)		{			while($row = $this->db->fetch_array($query))			{				$result[] = $row;			}		}		else 		{			if(strpos($vals, ',') || $vals =='*')			{				while($row = $this->db->fetch_array($query))				{					$result = $row;				}			}			else 			{				while($row = $this->db->fetch_row($query))				{					$result = $row['0'];				}			}					}		return $result;	}	//	public function getEndActions($table, $vals = '*', $conds = array(),  $offset = 0, $count = 1,  $sequence = array(), $func = '')	{		$result = false;		$sql = " select ". $vals ." from " . DB_PREFIX . $table." ";		$sql .= " where 1 ";		if($func)		{				foreach($func as $k =>$v)				{					$sql .= " and " . $k . $v ." ";				}		}				if($conds)		{			foreach($conds as $k =>$v)			{				if(strpos($v, ','))				{					$sql .= " and " . $k . " in (" . $v . ")";				}				else 				{					$sql .= " and " . $k . " = '" . $v . "'";				}			}		}		$sql .= " and end_time < ".TIMENOW;		if($sequence)		{			$sql .= " ORDER BY ";$sp = '';			foreach ($sequence as $k=>$v)			{				$sql .= $sp . " " . $k . " " . $v;				$sp = ',';			}		}		if($count > 0)		{			$sql .= ' LIMIT ';			$sql .= ($offset)  ? $offset . ' , '  : '';			$sql .= $count;		}			    $query = $this->db->query($sql);				if($count != 1)		{			while($row = $this->db->fetch_array($query))			{				$result[] = $row;			}		}		else 		{			if(strpos($vals, ',') || $vals =='*')			{				while($row = $this->db->fetch_array($query))				{					$result = $row;				}			}			else 			{				while($row = $this->db->fetch_row($query))				{					$result = $row['0'];				}			}					}		return $result;	}	//	public function getRadom($table, $vals = '*', $conds = array(),  $offset = 0, $count = 1,  $sequence = array(), $func = '')	{		$result = false;		$sql = " select ". $vals ." from " . DB_PREFIX . $table." ";		$sql .= " where 1 ";		if($func)		{				foreach($func as $k =>$v)				{					$sql .= " and " . $k . $v ." ";				}		}				if($conds)		{			foreach($conds as $k =>$v)			{				if(strpos($v, ','))				{					$sql .= " and " . $k . " in (" . $v . ")";				}				else 				{					$sql .= " and " . $k . " = '" . $v . "'";				}			}		}		if($sequence)		{			$sql .= " ORDER BY ";$sp = '';			foreach ($sequence as $k=>$v)			{				$sql .= $sp . " " . $k . " " . $v;				$sp = ',';			}		}		if($count > 0)		{			$sql .= ' LIMIT ';			$sql .= ($offset)  ? $offset . ' , '  : '';			$sql .= $count;		}	    $query = $this->db->query($sql);				if($count != 1)		{			while($row = $this->db->fetch_array($query))			{				$result[] = $row;			}		}		else 		{			if(strpos($vals, ',') || $vals =='*')			{				while($row = $this->db->fetch_array($query))				{					$result = $row;				}			}			else 			{				while($row = $this->db->fetch_row($query))				{					$result = $row['0'];				}			}					}		return $result;	}	public function delete($table, $conds = array())	{		$result = false;		if($conds)		{			$sql = '';			$sql .= "delete from " . DB_PREFIX .  $table . " ";						$sql .= " where 1 ";			if($conds)			{				foreach ($conds as $k => $v)				{					if(strpos($v, ','))					{						$sql .= " and " . $k . " in (" . $v . ")";					}					else 					{						$sql .= " and " . $k . " = '" . $v . "'";					}				}			}			$result = $this->db->query($sql);		}		return $result;	}	public function showMyAttentionAction($data,  $offset = 0, $count = 6,  $sequence = array('apply_time'=>'desc','create_time'=>'desc'))	{		$result = false;				if($data)		{			$sql = '';			$sql = "select t.* from " . DB_PREFIX . "activity t," . DB_PREFIX . "activity_apply g where ";			$sql .= " t.action_id = g.action_id and t.state = 1 and g.state=1  ";			foreach($data as $k =>$v)			{				if(strpos($v, ','))				{					$sql .= " and g." . $k . " in (" . $v . ")";				}				else 				{					$sql .= " and g." . $k . " = '" . $v . "'";				}			}			if($sequence)			{				$sql .= " ORDER BY ";$sp = '';				foreach ($sequence as $k=>$v)				{					$sql .= $sp . " " . $k . " " . $v;					$sp = ',';				}			}			if($count > 0)			{				$sql .= ' LIMIT ' . $offset . ' , ' . $count;			}			//print_r($sql);			$query = $this->db->query($sql);						if($count != 1)			{				while($row = $this->db->fetch_array($query))				{					$row['action_img'] = unserialize($row['action_img']); 					$result[$row['action_id']] = $row;				}			}			else 			{				if(strpos($vals, ',') || $vals =='*')				{					while($row = $this->db->fetch_array($query))					{						$row['action_img'] = unserialize($row['action_img']); 						$result = $row;					}				}				else 				{					while($row = $this->db->fetch_row($query))					{						$result = $row['0'];					}				}							}		}		return $result;	}		function getTopicMarkDay($count)	{		$con = '';		if($count > 0)		{			$con = " LIMIT 0," . $count;		}		$sql = "SELECT topic_mark FROM " . DB_PREFIX . "activity WHERE topic_mark !='' AND state=1 AND " .(TIMENOW-2592000) . " < create_time " . $con;		$q = $this->db->query($sql);		$info = array();		while($row = $this->db->fetch_array($q))		{			$info[] = $row['topic_mark'];		}		return $info;	}}