<?phprequire('./global.php');define('MOD_UNIQUEID', 'wbgroup');class wbGroup extends adminReadBase{	public function __construct()	{		parent::__construct();		include_once(ROOT_PATH . 'lib/class/share.class.php');		$this->share = new share();	}		public function __destruct()	{		parent::__destruct();	}		public function index(){}	public function show()	{		$plat = $this->share->get_plat($this->user['appid']);		foreach($plat as $k => $v)		{			$this->addItem($v);		}		$this->output();	}	/**	public function show()	{		$condition = $this->get_condition();		$offset = $this->input['offset'] ? intval($this->input['offset']) : 0 ;		$count = $this->input['count'] ? intval($this->input['count']) : 20 ;				$data_limit = ' LIMIT ' . $offset . ',' . $count;			$sql  = "SELECT g.*,t.access_token,t.update_time token_update_time FROM " . DB_PREFIX . "group g 				LEFT JOIN ".DB_PREFIX."token t 					ON g.id=t.group_id 				WHERE 1 " . $condition . $data_limit;		$info = $this->db->query($sql);				$ret = array();		while ( $row = $this->db->fetch_array($info) )		{			$row['access_token'] = unserialize($row['access_token']);			$row['expired_time'] = $row['access_token']['expires_in'] + $row['token_update_time']; 				if($row['expired_time'] <= TIMENOW)			{				$php_self = explode('/',$_SERVER['PHP_SELF']);				array_pop($php_self);				$php_self = implode('/',$php_self);				$php_self .= '/get_weibo.php?a=check_token&group_id='.$row['id'];				$row['href'] = 'http://' . $_SERVER['HTTP_HOST'] . $php_self;					$row['expired_time'] = '授权已过期  重新授权';			}			else 			{				$row['expired_time'] = date('Y-m-d H:i:s',$row['expired_time']);			}			$row['create_time'] = date('Y-m-d H:i',$row['create_time']);			$ret[] = $row;		}				foreach($ret as $k => $v)		{			$this->addItem($v);		}		$this->output();	}	*/			public function detail()	{		if($this->input['id'])		{			$data_limit = ' AND id=' . intval($this->input['id']);		}		else		{			$data_limit = ' LIMIT 1';		}					$sql = "SELECT * FROM " . DB_PREFIX ."group WHERE 1 " . $data_limit;		$ret = $this->db->query_first($sql);				if($ret)		{			$this->addItem($ret);			$this->output();		}		else		{			$this->errorOutput('查询失败');		}	}		public function count()	{		$condition = $this->get_condition();		$sql = "SELECT count(*) AS total FROM " . DB_PREFIX . "group WHERE 1 " . $condition;		$f = $this->db->query_first($sql);		echo json_encode($f);		}		public function get_condition()	{		$condition = '';		return $condition ;	}			/**	public function show_group()	{		$sql  = "SELECT * FROM " . DB_PREFIX . "group WHERE 1 ";		$info = $this->db->query($sql);				$ret = array();		while ( $row = $this->db->fetch_array($info) )		{			$ret[$row['id']] = $row['name'];		}		$this->addItem($ret);		$this->output();			}	*/	public function show_group()	{		$plat = $this->share->get_plat_type();		$this->addItem($plat[0]);		$this->output();	}	}$out = new wbGroup();if(!method_exists($out, $_INPUT['a'])){	$action = 'show';}else {	$action = $_INPUT['a'];}$out->$action(); ?>