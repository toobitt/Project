<?php/* * ************************************************************************* * LivSNS 0.1 * (C)2004-2010 HOGE Software. * * $Id:$ * ************************************************************************* */define('MOD_UNIQUEID', 'vod');require_once('global.php');require_once(ROOT_PATH . 'lib/class/publishcontent.class.php');require_once(ROOT_PATH . 'lib/class/publishplan.class.php');require(ROOT_PATH . 'frm/publish_interface.php');class VodPublish extends adminBase implements publish{    public function __construct()    {        parent::__construct();    }    public function __destruct()    {        parent::__destruct();    }    public function unknow()    {        $this->errorOutput(NOMETHOD);    }        private function get_trans_config()    {        $sql = "SELECT name, type_id, unique_id FROM " . DB_PREFIX . "vod_config WHERE is_use = 1 ORDER BY config_order_id DESC";        $info = $this->db->query($sql);        $config = array();        while ($row  = $this->db->fetch_array($info))        {        	$type = $row['type_id'];        	unset($row['type_id']);        	$config[$type][$row['unique_id']] = $row;        }        return $config;    }    //获取视频内容    public function get_content()    {        $id         = intval($this->input['from_id']);        $sort_id    = intval($this->input['sort_id']);        $offset     = $this->input['offset'] ? intval($this->input['offset']) : 0;        $num        = $this->input['num'] ? intval($this->input['num']) : 10;        $data_limit = ' LIMIT ' . $offset . ' , ' . $num;        if ($id)        {            $sql = "SELECT * FROM " . DB_PREFIX . "vodinfo WHERE id = {$id}";        }        else        {            $sql = "SELECT * FROM " . DB_PREFIX . "vodinfo WHERE vod_sort_id = {$sort_id}";        }        $info = $this->db->query($sql);        $ret  = array();        $vod_config = $this->get_trans_config();        while ($row  = $this->db->fetch_array($info))        {            $row['expand_id']      = '';            $row['content_fromid'] = $row['id'];            $row['indexpic']       = unserialize($row['img_info']);            $row['ip']             = hg_getip();            $row['user_id']        = $row['user_id'];            $row['user_name']      = $row['addperson'];            $row['brief']          = $row['comment'];            $row['special']        = $row['special'] ? unserialize($row['special']) : array();            $row['comment_num']    = $row['comment_count'];            $row['click_num']      = $row['click_count'];            $tmpconfig = $vod_config[$row['morebitrate_config_id']] ? $vod_config[$row['morebitrate_config_id']] : array();            $clarity = unserialize($row['clarity']);            $stream = array();                        if ($tmpconfig)            {            	$vfilename = str_replace('.mp4', '.m3u8', $row['video_filename']);            	foreach($tmpconfig AS $k => $v)            	{            		if ($k == $row['cur_clarity'])            		{            			$v['m3u8'] = $row['hostwork'] . '/' . $row['video_path'] . $vfilename;            		}            		else            		{            			$v['m3u8'] = $row['hostwork'] . '/' . preg_replace('/\/(\d+)\.ssm\//is', '/' . $k . '_\1.ssm/', $row['video_path']) . $k . '_' . $vfilename;            		}            		$stream[] = $v;            	}            }            unset($row['id']);            $row['video']          = array(                'host' => $row['hostwork'],                'dir' => '',                'filepath' => $row['video_path'],                'filename' => $row['video_filename'],                'is_audio' => $row['is_audio'],                'duration' => $row['duration'],                'start' => $row['start'],                'bitrate' => $row['bitrate'],                'aspect' => $row['aspect'],                'stream' => $stream,            );            $row['use_maincolumn'] = $this->settings['publish_main_url'];            $ret[]                 = $row;        }        $this->addItem($ret);        $this->output();    }    //更新视频栏目id    public function update_content()    {        $data = $this->input['data'];        if (empty($data))        {            return false;        }        $sql = "select * from " . DB_PREFIX . "vodinfo where id = " . $data['from_id'];        $ret = $this->db->query_first($sql);        if (intval($ret['status']) != 2)        {            $sql = "update " . DB_PREFIX . "vodinfo set expand_id = 0 ,column_url = '' where id = " . $data['from_id'];            $this->db->query($sql);        }        else        {            $column_id  = unserialize($ret['column_id']);    //发布栏目	            $column_url = unserialize($ret['column_url']);    //栏目url，发布对比，有删除栏目则删除对于栏目url            $url        = array();            if (!empty($column_url) && is_array($column_url))            {                foreach ($column_url as $k => $v)                {                    if ($column_id[$k])                    {                        $url[$k] = $v;                    }                }            }            if (!empty($data['content_url']) && is_array($data['content_url']))            {                foreach ($data['content_url'] as $k => $v)                {                    $url[$k] = $v;                }            }            $sql = "UPDATE " . DB_PREFIX . "vodinfo SET expand_id = " . $data['expand_id'] . ", column_url = '" . serialize($url) . "' where id = " . $data['from_id'];            $this->db->query($sql);        }        $this->addItem('success');        $this->output();    }    /**     * 发布系统删除某条内容时执行改方法     */    public function delete_publish()    {        $data = $this->input['data'];        if (empty($data))        {            return false;        }        if ($data['is_delete_column'])   //只删除某一栏目中内容        {            $sql          = "SELECT column_id, column_url 				    FROM " . DB_PREFIX . "vodinfo 				    WHERE id = " . $data['from_id'];            $ret          = $this->db->query_first($sql);            $column_id    = unserialize($ret['column_id']);            $column_url   = unserialize($ret['column_url']);            $del_columnid = explode(',', $data['column_id']);            if (is_array($del_columnid))            {                foreach ($del_columnid as $k => $v)                {                    unset($column_id[$v], $column_url[$v]);                }            }            $sql = "UPDATE " . DB_PREFIX . "vodinfo 					SET column_id = '" . addslashes(serialize($column_id)) . "', column_url = '" . addslashes(serialize($column_url)) . "' 					WHERE id = " . $data['from_id'];            $this->db->query($sql);        }        else  //全部删除        {            $sql = "UPDATE " . DB_PREFIX . "vodinfo 					SET expand_id = '', column_id = '', column_url = '' 					WHERE id = " . $data['from_id'];            $this->db->query($sql);        }        $this->addItem('true');        $this->output();    }    function up_content()    {        $content_fromid = intval($this->input['data']['content_fromid']);        if (!$content_fromid)        {            $this->errorOutput('NO_ID');        }        unset($this->input['data']['content_fromid']);        $special   = unserialize($this->input['data']['special']);        $sq        = "SELECT * FROM " . DB_PREFIX . "vodinfo WHERE id = " . $content_fromid;        $news_info = $this->db->query_first($sq);        if ($news_info['special'])        {            $pub_special = unserialize($news_info['special']);            if (is_array($pub_special))            {                foreach ($special as $k => $v)                {                    if($special[$k]['del'])                	{                		unset($pub_special[$k]);                	}                	else                	{                		$pub_special[$k] = $special[$k];                	}                }            }            else            {                $pub_special = $special;            }        }        else        {            $pub_special = $special;        }        if($this->input['data']['delete_column_id'])		{			unset($pub_special[$this->input['data']['delete_column_id']]);		}        $data            = array();        $data['special'] = serialize($pub_special);        $sql             = "UPDATE " . DB_PREFIX . "vodinfo SET";        $sql_extra = $space     = ' ';        foreach ($data as $k => $v)        {            $sql_extra .=$space . $k . "='" . $v . "'";            $space = ',';        }        $sql .=$sql_extra;        $sql .= " WHERE id=" . $content_fromid;        $this->db->query($sql);                $news_info['special'] = $data['special'];        publish_insert_query($news_info, 'update');    }        //区块应用，添加文稿数据，回调    function update_block_content()    {        $block = ($this->input['data']['block']);        $data = ($this->input['data']['data']);        if (!$block || !$data || !is_array($data) || !is_array($block))        {            $this->errorOutput('NO_DATA');        }        foreach($data as $k=>$v)        {            $content_fromids[] = $v['content_fromid'];        }        if(!$content_fromids)        {            $this->errorOutput('NO_CONTENT_FROMID');        }        $sq        = "SELECT * FROM " . DB_PREFIX . "vodinfo WHERE id in (" . implode(',',$content_fromids).")";        $info = $this->db->query($sq);        while ($row  = $this->db->fetch_array($info))        {            $pub_block = $row['block'] ? unserialize($row['block']) : array();            foreach ($block as $k => $v)            {                if ($block[$k]['del'])                {                    unset($pub_block[$k]);                }                else                {                    $pub_block[$k] = $block[$k];                }            }            $pub_block = $pub_block?serialize($pub_block):'';            $sql                = "UPDATE " . DB_PREFIX . "vodinfo SET block='$pub_block' WHERE id=" . $row['id'];            $this->db->query($sql);            $row['block'] = $pub_block;            //同步发布库            publish_insert_query($row, 'update');        }    }}$out    = new VodPublish();$action = $_INPUT['a'];if (!method_exists($out, $_INPUT['a'])){    $action = 'unknow';}$out->$action();?>