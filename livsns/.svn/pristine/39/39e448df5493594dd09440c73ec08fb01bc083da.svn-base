<?phpclass option{		public function __construct()	{		global $gGlobalConfig;		include_once (ROOT_PATH . 'lib/class/curl.class.php');		$this->curl = new curl($gGlobalConfig['App_option']['host'], $gGlobalConfig['App_option']['dir']);	}		public function __destruct()	{		unset($this->curl);	}		/**	 * 获取用户与来源的关系	 * @param Int $user_id	 * @param String $source	 * @param Int $source_id	 * @param String $action	 */	public function get_relation($data)	{		$this->curl->setSubmitType('get');			$this->curl->initPostData();		if(!empty($data) && is_array($data))		{			foreach($data as $k => $v)			{				$this->curl->addRequestData($k, $v);			}					}		$this->curl->addRequestData('a', 'show');		$result = $this->curl->request('option.php');		return $result;	}		public function get_attention($source, $action)	{		$this->curl->setSubmitType('get');			$this->curl->initPostData();		$this->curl->addRequestData('source', $source);		$this->curl->addRequestData('action', $action);		$this->curl->addRequestData('a', 'show_attention');		$result = $this->curl->request('option.php');		return $result[0];	}		/**	 * 更新option相关数据	 * @param String $ids 删除不存在的数据	 * @param String $audit 小组删除导致的逻辑删除	 * @param unknown_type $back 其他删除导致的逻辑删除	 * @param unknown_type $val 对应导致删除的名称	 */	public function del_attention($ids, $audit, $back, $val)	{		$this->curl->setSubmitType('post');			$this->curl->initPostData();		$this->curl->addRequestData('ids', $ids);		$this->curl->addRequestData('audit_ids', $audit);		$this->curl->addRequestData('back_ids', $back);		$this->curl->addRequestData('val', $val);		$this->curl->addRequestData('a', 'del_attention');		$result = $this->curl->request('option.php');		return $result[0];	}		public function count($data)	{		$this->curl->setSubmitType('get');			$this->curl->initPostData();		if(!empty($data) && is_array($data))		{			foreach ($data as $k => $v)			{				$this->curl->addRequestData($k, $v);			}					}		$this->curl->addRequestData('a', 'count');		$result = $this->curl->request('option.php');		return $result;	}		/**	 * 添加用户与来源的关系	 * @param Int $user_id	 * @param String $source	 * @param Int $source_id	 * @param String $action	 */	public function add_relation($user_id, $source, $source_id, $action)	{		$this->curl->setSubmitType('get');			$this->curl->initPostData();		$this->curl->addRequestData('user_id', $user_id);		$this->curl->addRequestData('source', $source);		$this->curl->addRequestData('source_id', $source_id);		$this->curl->addRequestData('action', $action);		$this->curl->addRequestData('a', 'create');		$result = $this->curl->request('option.php');		return $result;	}		/**	 * 删除用户与来源的关系	 * @param Int $user_id	 * @param String $source	 * @param Int $source_id	 * @param String $action	 */	public function drop_relation($user_id, $source, $source_id, $action)	{		$this->curl->setSubmitType('get');			$this->curl->initPostData();		$this->curl->addRequestData('user_id', $user_id);		$this->curl->addRequestData('source', $source);		$this->curl->addRequestData('source_id', $source_id);		$this->curl->addRequestData('action', $action);		$this->curl->addRequestData('a', 'delete');		$result = $this->curl->request('option.php');		return $result;	}		/**	 * 获取与来源有关的用户	 * @param String $source	 * @param Int $source_id	 * @param String $action	 * @param Int $offset	 * @param Int $count -1  取全部	 */	public function members($source, $source_id, $action, $offset, $count)	{		$this->curl->setSubmitType('get');			$this->curl->initPostData();		$this->curl->addRequestData('source', $source);		$this->curl->addRequestData('source_id', $source_id);		$this->curl->addRequestData('action', $action);		$this->curl->addRequestData('offset', $offset);		$this->curl->addRequestData('count', $count);		$this->curl->addRequestData('a', 'detail');		$result = $this->curl->request('option.php');		return $result;	}	/**	 * 返回所有总数以及我是否已操作默认返回false	 * @param String $source	 * @param Int $source_id	 * @param String $action	 * @param Int $offset	 * @param Int $count	 */	public function getTotalAndUse($user_id = '', $source = '', $source_id = 0, $action = '')	{		if(!$this->curl)		{			return array();		}		$this->curl->setSubmitType('get');			$this->curl->initPostData();		$this->curl->addRequestData('user_id', $user_id);		$this->curl->addRequestData('source', $source);		$this->curl->addRequestData('source_id', $source_id);		$this->curl->addRequestData('action', $action);		$this->curl->addRequestData('a', 'getTotalAndUse');		$result = $this->curl->request('option.php');		return $result;	}		public function delete($data = array())	{		$this->curl->setSubmitType('get');			$this->curl->initPostData();		foreach ($data as $k => $v)		{			$this->curl->addRequestData($k, $v);		}			$this->curl->addRequestData('a', 'delete');		$result = $this->curl->request('option.php');		return $result;	}	/**	 * 更新状态	 * source	 * source_id	 * Enter description here ...	 * @param unknown_type $data	 */	public function updateState($data = array())	{		$this->curl->setSubmitType('post');			$this->curl->initPostData();		foreach ($data as $k => $v)		{			$this->curl->addRequestData($k, $v);		}			$this->curl->addRequestData('a', 'updateState');		$result = $this->curl->request('option.php');		return $result;	}}