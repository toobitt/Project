<?phpclass photo extends BaseFrm{	public function __construct()	{		parent::__construct();	}		public function __destruct()	{		parent::__destruct();	}		//获取所有相册信息	public function show($offset, $count, $data= array())	{		$data_limit = ' LIMIT ' . $offset . ' , ' . $count;		$sql = 'SELECT a.albums_id,a.albums_name,a.albums_description,a.cover_file_name,a.sys,a.user_id,t.picture_count 		FROM (SELECT a.albums_id,an.albums_name,a.albums_description,a.cover_file_name,a.sys,a.user_id 		FROM ' . DB_PREFIX . 'albums a, ' . DB_PREFIX . 'albums_name an WHERE an.id=a.albums_name_id) a 		LEFT JOIN (SELECT albums_id,picture_count FROM ' . DB_PREFIX . 'albums_total 		WHERE user_id = ' . $data['user_id'] . ') t ON a.albums_id = t.albums_id WHERE a.sys = 1 OR a.user_id = ' . $data['user_id'];		//获取查询条件		//$condition = $this->get_condition($data);		$sql = $sql . $data_limit;		//$this->errorOutput($sql);		$query = $this->db->query($sql);		$info = array();		while ($row = $this->db->fetch_array($query))		{			if (unserialize($row['cover_file_name']))			{				$row['cover_file_name'] = unserialize($row['cover_file_name']);			}			if ($row['user_id'] == 0)			{				$row['user_id'] = $data['user_id'];			}			if (!$row['picture_count'])			{				$row['picture_count'] = 0;			}			$info[] = $row;		}				return $info;	}		//获取相册总数	public function count($data = array())	{		$sql = 'SELECT COUNT(*) AS total FROM ' . DB_PREFIX . 'albums 		WHERE user_id = ' . $data['user_id'] . ' OR sys = 1';		//$condition = $this->get_condition($data);		//$sql .= $condition;		return $this->db->query_first($sql);	}		//获取某个相册下的图片总数	public function photo_count($albums_id, $user_id)	{		$sql = 'SELECT * FROM ' . DB_PREFIX . 'albums_total 		WHERE albums_id = ' . $albums_id . ' AND user_id = ' . $user_id;		return $this->db->query_first($sql);	}		//获取单个相册信息	public function detail($albums_id, $user_id)	{		$sql = 'SELECT a.albums_id,a.albums_name,a.albums_description,a.cover_file_name,a.sys,a.user_id,t.picture_count 		FROM (SELECT a.albums_id,an.albums_name,a.albums_description,a.cover_file_name,a.sys,a.user_id 		FROM ' . DB_PREFIX . 'albums a, ' . DB_PREFIX . 'albums_name an WHERE an.id=a.albums_name_id) a 		LEFT JOIN (SELECT albums_id,picture_count FROM ' . DB_PREFIX . 'albums_total 		WHERE user_id = ' . $user_id . ') t ON a.albums_id = t.albums_id WHERE a.albums_id = ' . $albums_id;		$row = $this->db->query_first($sql);		if (unserialize($row['cover_file_name']))		{			$row['cover_file_name'] = unserialize($row['cover_file_name']);		}		if ($row['user_id'] == 0)		{			$row['user_id'] = $user_id;		}		if (!$row['picture_count'])		{			$row['picture_count'] = 0;		}		return $row;	}		//获取某个用户的某个相册下的图片	public function get_photo($albums_id, $user_id, $offset, $count)	{		$data_limit = ' LIMIT ' . $offset . ' , ' . $count;		$sql = 'SELECT * FROM ' . DB_PREFIX . 'albums_photo 		WHERE albums_id = ' . $albums_id . ' AND user_id = ' . $user_id;		$sql .= $data_limit;		$query = $this->db->query($sql);		$info = array();		while ($row = $this->db->fetch_array($query))		{			$row['photo_info'] = unserialize($row['photo_info']);			$info[] = $row;		}		return $info;	}		//检测创建的相册名称	public function check_name($albums_name, $user_id)	{		$sql = 'SELECT COUNT(a.albums_id) AS total 		FROM ' . DB_PREFIX . 'albums a, ' . DB_PREFIX . 'albums_name an 		WHERE a.albums_name_id = an.id AND (a.user_id = ' . $user_id . ' OR a.sys = 1) 		AND an.albums_name = "' . $albums_name . '"';		$ret = $this->db->query_first($sql);		if ($ret['total'] > 0) return false;		$sql = 'SELECT id FROM ' . DB_PREFIX . 'albums_name WHERE albums_name = "' . $albums_name . '"';		$result = $this->db->query_first($sql);		if ($result['id']) return $result['id'];		$sql = 'INSERT INTO ' . DB_PREFIX . 'albums_name SET albums_name = "' . $albums_name . '"';		$this->db->query($sql);		return $this->db->insert_id();	}		public function check_exists($user_id, $albums_id)	{		$sql = 'SELECT COUNT(*) AS total FROM ' . DB_PREFIX . 'albums_total 		WHERE user_id = ' . $user_id . ' AND albums_id = ' . $albums_id;		$result = $this->db->query_first($sql);		return $result['total'];	}		//创建相册	public function create($data)	{		$setCon = array();		foreach($data as $k=>$v)		{			if (is_string($v))			{				$setCon[] = $k . "='" . $v . "'";			}			elseif (is_int($v))			{				$setCon[] = $k . '=' . $v;			}		}		$sql = 'INSERT INTO ' . DB_PREFIX . 'albums SET ' . implode(',', $setCon);				$this->db->query($sql);				return $this->db->insert_id();	}		//相册统计数据插入	public function create_total($data)	{		$setCon = array();		foreach($data as $k=>$v)		{			if (is_string($v))			{				$setCon[] = $k . "='" . $v . "'";			}			elseif (is_int($v))			{				$setCon[] = $k . '=' . $v;			}		}		$sql = 'INSERT INTO ' . DB_PREFIX . 'albums_total SET ' . implode(',', $setCon);				return $this->db->query($sql);	}		//相册图片数据插入	public function create_photo($data)	{		$setCon = array();		foreach($data as $k=>$v)		{			if (is_string($v))			{				$setCon[] = $k . "='" . $v . "'";			}			elseif (is_int($v))			{				$setCon[] = $k . '=' . $v;			}		}		$sql = 'INSERT INTO ' . DB_PREFIX . 'albums_photo SET ' . implode(',', $setCon);				$this->db->query($sql);				return $this->db->insert_id();	}		//更新相册	public function update($data, $albums_id)	{		$setCon = array();		foreach($data as $k=>$v)		{			if (is_string($v))			{				$setCon[] = $k . "='" . $v . "'";			}			elseif (is_int($v))			{				$setCon[] = $k . '=' . $v;			}		}		$sql = 'UPDATE ' . DB_PREFIX . 'albums SET ' . implode(',', $setCon) . ' WHERE albums_id = ' . $albums_id;				return $this->db->query($sql);	}		//更新相册图片统计	public function update_albums($albums_id, $user_id, $flag)	{		$sql = 'UPDATE ' . DB_PREFIX . 'albums_total SET picture_count = picture_count';		$sql .= $flag ? ' + 1' : ' - 1';		$sql .= ' WHERE albums_id = ' . $albums_id . ' AND user_id = ' . $user_id;		return $this->db->query($sql);	}		//删除相册统计	public function del_total($albums_id, $user_id)	{		$sql = 'DELETE FROM ' . DB_PREFIX . 'albums_total 		WHERE user_id = ' . $user_id . ' AND albums_id = ' . $albums_id;		return $this->db->query($sql);	}		//删除相册(单个或者多个)	public function delete($albums_ids)	{		$sql = 'DELETE FROM ' . DB_PREFIX . 'albums WHERE albums_id in (' . $albums_ids . ')';		return $this->db->query($sql);	}		//删除相册下的图片	public function del_photo($p_ids, $albums_ids, $user_id = '')	{		$sql = 'DELETE FROM ' . DB_PREFIX . 'albums_photo WHERE 1';		if ($p_ids)		{			$sql .= ' AND p_id in (' . $p_ids . ')';		}		if ($albums_ids)		{			$sql .= ' AND albums_id in (' . $albums_ids . ')';		}		if ($user_id)		{			$sql .= ' AND user_id = ' . $user_id;		}		return $this->db->query($sql);	}		public function get_condition($data = array())	{		$condition = '';				//查询的关键字		if($data['key'])		{			$condition .= " AND an.albums_name LIKE '%" . $data['key'] . "%' ";		}        //查询发布的时间        if(is_numeric($data['date_search']))		{			$today = strtotime(date('Y-m-d'));			$tomorrow = strtotime(date('Y-m-d',TIMENOW+24*3600));			switch($data['date_search'])			{				case 1://所有时间段					break;				case 2://昨天的数据					$yesterday = strtotime(date('y-m-d',TIMENOW-24*3600));					$condition .= " AND  a.create_time > '".$yesterday."' AND a.create_time < '".$today."'";					break;				case 3://今天的数据					$condition .= " AND  a.create_time > '".$today."' AND a.create_time < '".$tomorrow."'";					break;				case 4://最近3天					$last_threeday = strtotime(date('y-m-d',TIMENOW-2*24*3600));					$condition .= " AND  a.create_time > '".$last_threeday."' AND a.create_time < '".$tomorrow."'";					break;				case 5://最近7天					$last_sevenday = strtotime(date('y-m-d',TIMENOW-6*24*3600));					$condition .= " AND  a.create_time > '".$last_sevenday."' AND a.create_time < '".$tomorrow."'";					break;				default://所有时间段					break;			}		}				//查询用户的相册		if(is_numeric($data['user_id']))		{			$condition .= " AND a.user_id = " . $data['user_id'];				}				//查询相册的类型		if(is_numeric($data['sys_type']))		{			if($data['sys_type'] == -1)			{				$condition .= " ";			}			else			{				$condition .= " AND a.sys_type = " . $data['sys_type'];			}		}				$albums_type_hgupdn = array(			1 => 'update_time',			2 => 'photo_count',			3 => 'visit_count',		);				$data['hgupdn'] = strtoupper($data['hgupdn']);				if ($data['hgupdn'] != 'ASC')		{			$data['hgupdn'] = 'DESC';		}		if (!in_array($data['hgorder'], $group_type_hgupdn))		{			$data['hgorder'] = 'create_time';		}		if(is_numeric($data['_type']))		{			$data['hgorder'] = $group_type_hgupdn[$data['_type']];		}				$orderby = ' ORDER BY a.' . $data['hgorder']  . ' ' . $data['hgupdn'] ;				//查询排序方式(升序或降序,默认为降序)		$condition .= $orderby;				return $condition;		}}