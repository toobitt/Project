<?php/* * ************************************************************************* * LivSNS 0.1 * (C)2004-2010 HOGE Software. * * $Id:$ * ************************************************************************* */require_once('global.php');require_once(ROOT_PATH . 'lib/class/publishcontent.class.php');require_once(ROOT_PATH . 'lib/class/publishplan.class.php');require(ROOT_PATH . 'frm/publish_interface.php');define('MOD_UNIQUEID', 'special');class special_publish extends adminBase implements publish{    public function __construct()    {        parent::__construct();    }    public function __destruct()    {        parent::__destruct();    }    public function unknow()    {        $this->errorOutput(NOMETHOD);    }    /**     * 发布系统删除某条内容时执行改方法     */    public function delete_publish()    {        $data = $this->input['data'];        if (empty($data))        {            return false;        }        if ($data['is_delete_column'])   //只删除某一栏目中内容        {            $sql          = "SELECT column_id, column_url FROM " . DB_PREFIX . "special WHERE id = " . $data['from_id'];            $ret          = $this->db->query_first($sql);            $column_id    = unserialize($ret['column_id']);            $column_url   = unserialize($ret['column_url']);            $del_columnid = explode(',', $data['column_id']);            if (is_array($del_columnid))            {                foreach ($del_columnid as $k => $v)                {                    unset($column_id[$v], $column_url[$v]);                }            }            $sql = "UPDATE " . DB_PREFIX . "special SET column_id = '" . addslashes(serialize($column_id)) . "', column_url = '" . addslashes(serialize($column_url)) . "' WHERE id = " . $data['from_id'];            $this->db->query($sql);        }        else  //全部删除        {            $sql = "UPDATE " . DB_PREFIX . "special SET expand_id = '' AND column_id = '' AND column_url = '' WHERE id = " . $data['from_id'];            $this->db->query($sql);        }        $this->addItem('true');        $this->output();    }    /**     *  获取专题     */    public function get_content()    {        $id         = intval($this->input['from_id']);        $offset     = $this->input['offset'] ? intval($this->input['offset']) : 0;        $num        = $this->input['num'] ? intval($this->input['num']) : 10;        $data_limit = ' LIMIT ' . $offset . ' , ' . $num;        $sql        = "select * from " . DB_PREFIX . "special  where id=" . $id . $data_limit;        $info       = $this->db->query($sql);        $ret        = array();        while ($row        = $this->db->fetch_array($info))        {            $row['bundle_id']      = APP_UNIQUEID;            $row['module_id']      = MOD_UNIQUEID;            $row['struct_id']      = MOD_UNIQUEID;            $row['struct_ast_id']  = '';            $row['expand_id']      = '';            $row['indexpic']       = $row['pic'];            $row['content_fromid'] = $row['id'];            $row['keywords']       = $row['keywords'];            $row['ip']             = hg_getip();            //$row['user_id']        = $this->user['user_id'];            //$row['user_name']      = $this->user['user_name'];            $row['title']          = $row['name'];            if ($row['custom_filename'] && $row['maketype'] == '1')            {                if ($row['column_dir'])                {                    $row['file_custom_filename'] = trim($row['column_dir'], '/') . '/' . $row['custom_filename'] . '.html';                }                else                {                    $row['file_custom_filename'] = $row['custom_filename'] . '.html';                }            }            elseif ($row['custom_filename'] && $row['maketype'] == '2')            {                if ($row['column_dir'])                {                    $row['file_custom_filename'] = trim($row['column_dir'], '/') . '/' . $row['custom_filename'] . '.php';                }                else                {                    $row['file_custom_filename'] = $row['custom_filename'] . '.php';                }                $row['file_custom_filename'] = $row['custom_filename'] . '.php';            }            $row['file_dir']       = $row['column_dir'];            $row['file_domain']    = $row['column_domain'];            $row['use_maincolumn'] = $this->settings['publish_main_url'];            $pregreplace           = array('&#032;', '<!--', '-->', '>', '<', '"', '!', "'", "\n", '$', "\r");            $pregfind              = array(' ', '&#60;&#33;--', '--&#62;', '&gt;', '&lt;', '&quot;', '&#33;', '&#39;', "\n", '&#036;', '');            $row['brief']          = str_replace($pregfind, $pregreplace, $row['brief']);            unset($row['id']);            $ret[]                 = $row;        }        $this->addItem($ret);        $this->output();    }    /**     * 更新内容expand_id,发布内容id     */    public function update_content()    {        $data = $this->input['data'];        if (empty($data))        {            return false;        }        $sql = "select * from " . DB_PREFIX . "special where id = " . $data['from_id'];        $ret = $this->db->query_first($sql);        if ($ret['state'] != 1)        {            $sql = "update " . DB_PREFIX . "special set expand_id = 0, column_url = '' where id = " . $data['from_id'];        }        else        {            $column_id  = unserialize($ret['column_id']);    //发布栏目		            $column_url = unserialize($ret['column_url']);    //栏目url，发布对比，有删除栏目则删除对于栏目url            $url        = array();            if (!empty($column_url) && is_array($column_url))            {                foreach ($column_url as $k => $v)                {                    if ($column_id[$k])                    {                        $url[$k] = $v;                    }                }            }            if (!empty($data['content_url']) && is_array($data['content_url']))            {                foreach ($data['content_url'] as $k => $v)                {                    $url[$k] = $v;                }            }            $sql = "UPDATE " . DB_PREFIX . "special SET expand_id = " . $data['expand_id'] . ", column_url = '" . serialize($url) . "', pub_time = '" . TIMENOW . "' where id = " . $data['from_id'];        }        $this->db->query($sql);        $this->addItem('true');        $this->output();    }        //区块应用，添加文稿数据，回调    function update_block_content()    {        $block = ($this->input['data']['block']);        $data = ($this->input['data']['data']);        if (!$block || !$data || !is_array($data) || !is_array($block))        {            $this->errorOutput('NO_DATA');        }        foreach($data as $k=>$v)        {            $content_fromids[] = $v['content_fromid'];        }        if(!$content_fromids)        {            $this->errorOutput('NO_CONTENT_FROMID');        }        $sq        = "SELECT * FROM " . DB_PREFIX . "special WHERE id in (" . implode(',',$content_fromids).")";        $info = $this->db->query($sq);        while ($row  = $this->db->fetch_array($info))        {            $pub_block = $row['block'] ? unserialize($row['block']) : array();            foreach ($block as $k => $v)            {                if ($block[$k]['del'])                {                    unset($pub_block[$k]);                }                else                {                    $pub_block[$k] = $block[$k];                }            }            $pub_block = $pub_block?serialize($pub_block):'';            $sql                = "UPDATE " . DB_PREFIX . "special SET block='$pub_block' WHERE id=" . $row['id'];            $this->db->query($sql);            $row['block'] = $pub_block;            //同步发布库            publish_insert_query($row, 'update');        }    }}$out = new special_publish();if (!method_exists($out, $_INPUT['a'])){    $action = 'unknow';}else{    $action = $_INPUT['a'];}$out->$action();?>