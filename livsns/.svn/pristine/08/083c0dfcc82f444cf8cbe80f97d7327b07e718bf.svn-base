<?php/**************************************************************************** LivSNS 0.1* (C)2004-2012 HOGE Software.** $Id: photo.php 2012-10-09 11:11:29Z yaojian $***************************************************************************/require './global.php';require './lib/photo.class.php';class photoUpdateApi extends BaseFrm{	private $photo;		public function __construct()	{		parent::__construct();		$this->photo = new photo();	}		public function __destruct()	{		parent::__destruct();	}		//创建相册	public function create()	{		$user_id = isset($this->user['user_id']) ? intval($this->user['user_id']) : -1;		$user_name = isset($this->user['user_name']) ? trim(urldecode($this->user['user_name'])) : '';		$albums_name = isset($this->input['albums_name']) ? trim(urldecode($this->input['albums_name'])) : '';		$albums_desc = isset($this->input['albums_desc']) ? trim(urldecode($this->input['albums_desc'])) : '';		$cover_file = isset($this->input['cover_file']) ? trim(urldecode($this->input['cover_file'])) : '';		if ($user_id < 0 || empty($user_name) || empty($albums_name) || empty($cover_file))		{			$this->errorOutput(PARAM_WRONG);		}		$ret = $this->photo->check_name($albums_name, $user_id);		if (!$ret) $this->errorOutput(NAME_EXSITS);		$albums_name_id = $ret;				$data = array(			'user_id' => $user_id,			'user_name' => $user_name,			'albums_name_id' => $albums_name_id,			'albums_description' => $albums_desc,			'cover_file_name' => $cover_file,			'create_time' => TIMENOW,			'update_time' => TIMENOW,		);		$albums_id = $this->photo->create($data);		$totalData = array(			'user_id' => $user_id,			'user_name' => $user_name,			'albums_id' => $albums_id,			'picture_count' => 0		);		$this->photo->create_total($totalData);		$data['albums_id'] = $albums_id;		$this->addItem($data);		$this->output();	}		//上传相册图片	public function create_photo()	{		$user_id = isset($this->user['user_id']) ? intval($this->user['user_id']) : -1;		$user_name = isset($this->user['user_name']) ? trim(urldecode($this->user['user_name'])) : '';		$albums_id = isset($this->input['albums_id']) ? intval($this->input['albums_id']) : -1;		$photo_info = isset($this->input['photo']) ? trim(urldecode($this->input['photo'])) : '';		if ($user_id < 0 || empty($user_name) || $albums_id < 0 || empty($photo_info))		{			$this->errorOutput(PARAM_WRONG);		}		$data = array(			'user_id' => $user_id,			'user_name' => $user_name,			'albums_id' => $albums_id,			'photo_info' => $photo_info,			'create_time' => TIMENOW,		);		$result = $this->photo->create_photo($data);				//更新相册图片数		$this->photo->update_albums($albums_id, $user_id, true);				$data['p_id'] = $result;				$this->addItem($data);		$this->output();	}		//修改相册	public function modify()	{		$albums_id = isset($this->input['albums_id']) ? intval($this->input['albums_id']) : -1;		$user_id = isset($this->user['user_id']) ? intval($this->user['user_id']) : -1;		$albums_name = isset($this->input['albums_name']) ? trim(urldecode($this->input['albums_name'])) : '';		$albums_desc = isset($this->input['albums_desc']) ? trim(urldecode($this->input['albums_desc'])) : '';		$cover_file = isset($this->input['cover_file']) ? trim(urldecode($this->input['cover_file'])) : '';		if ($albums_id < 0)		{			$this->errorOutput(PARAM_WRONG);		}		$albums_info = $this->photo->detail($albums_id);		if ($albums_info['user_id'] != $user_id)		{			$this->errorOutput(NO_PERMISSION);		}		$data = array();		if (!empty($albums_name)) $data['albums_name'] = $albums_name;		if (!empty($albums_desc)) $data['albums_description'] = $albums_desc;		if (!empty($cover_file)) $data['cover_file_name'] = $cover_file;		$data['update_time'] = TIMENOW;		$result = $this->photo->update($data, $albums_id);		$this->addItem($result);		$this->output();	}		//删除相册(单个或者多个)	public function drop()	{		$albums_ids = trim(urldecode($this->input['albums_ids']));		if (empty($albums_ids)) $this->errorOutput(PARAM_WRONG);		//删除相册下的图片		$ret = $this->photo->del_photo('', $albums_ids, $this->user['user_id']);		if (!$ret) $this->errorOutput(OP_FAIL);		//删除相册		$albums_id_arr = explode(',', $albums_ids);		foreach ($albums_id_arr as $id)		{			$this->photo->del_total($id, $this->user['user_id']);		}		$result = $this->photo->delete($albums_ids);		$this->addItem($result);		$this->output();	}		//删除某个相册下的图片(单张或者多张)	public function drop_photo()	{		$albums_id = trim(urldecode($this->input['albums_id']));		$p_ids = trim(urldecode($this->input['p_ids']));		if (empty($p_ids) || empty($albums_id)) $this->errorOutput(PARAM_WRONG);		$result = $this->photo->del_photo($p_ids, '', $this->user['user_id']);				//更新相册图片数		$this->photo->update_albums($albums_id, $this->user['user_id'], false);				$this->addItem($result);		$this->output();	}		//更新相册(微博1、行动2、头像3)	public function add_sys_albums()	{		$user_id = isset($this->user['user_id']) ? intval($this->user['user_id']) : -1;		$user_name = isset($this->user['user_name']) ? trim(urldecode($this->user['user_name'])) : '';		$albums_id = isset($this->input['type']) ? intval($this->input['type']) : -1;		$photo_info = isset($this->input['photo']) ? trim(urldecode($this->input['photo'])) : '';		if ($user_id < 0 || empty($user_name) || empty($photo_info))		{			$this->errorOutput(PARAM_WRONG);		}		if ($albums_id != 1 && $albums_id != 2 && $albums_id != 3)		{			$this->errorOutput(PARAM_WRONG);		}		$ret = $this->photo->check_exists($user_id, $albums_id);		if (!$ret)		{			$totalData = array(				'user_id' => $user_id,				'user_name' => $user_name,				'albums_id' => $albums_id,				'picture_count' => 0			);			$this->photo->create_total($totalData);		}				$data = array(			'user_id' => $user_id,			'user_name' => $user_name,			'albums_id' => $albums_id,			'photo_info' => $photo_info,			'create_time' => TIMENOW,		);		$result = $this->photo->create_photo($data);				//更新相册图片数		$this->photo->update_albums($albums_id, $user_id, true);				$data['p_id'] = $result;				$this->addItem($data);		$this->output();	}		//方法不存在的时候调用的方法	public function none()	{		$this->errorOutput('调用的方法不存在');	}}$out = new photoUpdateApi();$action = $_INPUT['a'];if (!method_exists($out, $action)){	$action = 'none';}$out->$action();