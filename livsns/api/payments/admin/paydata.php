<?php/**************************************************************************** LivSNS 0.1* (C)2004-2010 HOGE Software.** $Id: payments.php 17960 2013-03-21 14:28:00 jeffrey $***************************************************************************/require_once './global.php';//require_once CUR_CONF_PATH . 'lib/paydata.class.php';require_once CUR_CONF_PATH . 'core/Core.class.php';define('MOD_UNIQUEID', 'pay_data'); //模块标识class paymentsApi extends adminReadBase{	private $paydata;        private $tbname = "paydata";		public function __construct()	{		parent::__construct();        $this->dao = new Core();		//$this->paydata = new paydataClass();	}	public function __destruct()	{		parent::__destruct();		unset($this->paydata);	}		public function index()	{			}		/**	 * 信息列表	 */	public function show()	{	    $offset = $this -> input['offset'] ? $this -> input['offset'] : 0;        $count = $this -> input['count'] ? intval($this -> input['count']) : 20;        $data_limit =  $this->get_condition().' order by id desc LIMIT ' . $offset . ' , ' . $count;                $query = "SELECT *                   FROM ".DB_PREFIX."paydata ";        $paydata_info = $this -> dao ->query($query.$data_limit);                		if ($paydata_info)		{			foreach ($paydata_info as $value)			{				$this->addItem($value);			}		}				$this->output();	}			/**	 * 信息数据总数	 */    public function count() {        $condition = $this -> get_condition();        $info = $this -> dao -> count($this -> tbname, $condition);        echo json_encode($info);    }	/**	**	信息编辑	**/	public function detail()	{	}		/**	 * 查询条件	 * @param Array $data	 */	private function get_condition()	{        $condition = " WHERE 1 ";		//关键字查询		if(trim(urldecode($this->input['key'])))		{			$condition .= ' AND  out_trade_no  LIKE "%'.trim(($this->input['key'])).'%"';		}				//自定义时间查询		if($this->input['start_time'])		{			$start_time = strtotime(trim(($this->input['start_time'])));			$start_time = (int)$start_time;			$condition .= " AND create_time >= ".$start_time;		}				if($this->input['end_time'])		{			$end_time = strtotime(trim(($this->input['end_time'])));			$end_time = (int)$end_time;			$condition .= " AND create_time <= ".$end_time;		}				if($this->input['date_search'])		{			$today = strtotime(date('Y-m-d'));			$tomorrow = strtotime(date('y-m-d',TIMENOW+24*3600));			switch(intval($this->input['date_search']))			{				case 1://所有时间段					break;				case 2://昨天的数据					$yesterday = strtotime(date('y-m-d',TIMENOW-24*3600));					$condition .= " AND  create_time > '".$yesterday."' AND create_time < '".$today."'";					break;				case 3://今天的数据					$condition .= " AND  create_time > '".$today."' AND create_time < '".$tomorrow."'";					break;				case 4://最近3天					$last_threeday = strtotime(date('y-m-d',TIMENOW-2*24*3600));					$condition .= " AND  create_time > '".$last_threeday."' AND create_time < '".$tomorrow."'";					break;				case 5://最近7天					$last_sevenday = strtotime(date('y-m-d',TIMENOW-6*24*3600));					$condition .= " AND  create_time > '".$last_sevenday."' AND create_time < '".$tomorrow."'";					break;				default://所有时间段					break;			}		}				return $condition;			}}$out = new paymentsApi();$action = $_INPUT['a'];if (!method_exists($out, $action)){	$action = 'show';}$out->$action();?>