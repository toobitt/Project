<?phprequire('./global.php');define('MOD_UNIQUEID', 'wb');class wb extends adminReadBase{	public function __construct()	{		$this->mPrmsMethods = array(			'manage'		=>'管理',			'_node'=>array(				'name'=>'圈子',				'filename'=>'wbcircle.php',				'node_uniqueid'=>'circle_node',				),		);						parent::__construct();	}		public function __destruct()	{		parent::__destruct();	}		public function index(){}		public function show()	{		$condition = $this->get_condition();        //根据连接主表选择排序字段  使用主表字段排序 防止using temporary        if ($this->input['_id']) {            $condition .=" ORDER BY wc.create_time  ";        } else {            $condition .=" ORDER BY w.create_time  ";        }        //查询排序方式(升序或降序,默认为降序)        $condition .= $this->input['descasc'] ? $this->input['descasc'] : ' DESC ';		$offset = $this->input['offset'] ? intval($this->input['offset']) : 0 ;		$count = $this->input['count'] ? intval($this->input['count']) : 20 ;			$data_limit = ' LIMIT ' . $offset . ',' . $count;				if(!empty($this->input['_id']))		{			$sql = "SELECT w.*,u.circle_id,u.group_name FROM " .DB_PREFIX ."weibo_circle wc					LEFT JOIN " . DB_PREFIX ."weibo w						ON wc.weibo_id = w.id					LEFT JOIN " . DB_PREFIX ."user u						ON wc.uid = u.id					WHERE 1 AND wc.circle_id = ".intval($this->input['_id']) . $condition . $data_limit;		}		else 		{			$sql = "SELECT w.*,u.circle_id,u.group_name FROM " . DB_PREFIX ."weibo w 					LEFT JOIN " . DB_PREFIX ."user u						ON w.uid = u.id					WHERE 1 " . $condition . $data_limit;		}		$info = $this->db->query($sql);				$ret = array();		while ( $row = $this->db->fetch_array($info) ) 		{			unset($row['weibo_info']);			$row['create_time']  = date('Y-m-d H:i',$row['create_time']);			$row['img'] = unserialize($row['img']);			$row['video'] = unserialize($row['video']);			$row['music'] = unserialize($row['music']);			$row['source_info'] = unserialize($row['source_info']);			$row['picsize'] = unserialize($row['picsize']);			$row['circle_id'] = unserialize($row['circle_id']);			$row['state'] = $row['status'];			switch($row['status'])			{				case 0:					$row['status'] = '未审核';					break;				case 1:					$row['status'] = '已审核';					break;				case 2:					$row['status'] = '已打回';					break;			}			$ret[] = $row;		}				foreach($ret as $k => $v)		{			$this->addItem($v);		}		$this->output();		}			public function detail()	{		if($this->input['id'])		{			$data_limit = ' AND w.id=' . intval($this->input['id']);		}		else		{			$data_limit = ' LIMIT 1';		}					$sql = "SELECT w.*,u.avatar FROM " . DB_PREFIX ."weibo w 				LEFT JOIN ".DB_PREFIX."user u 					ON w.uid = u.id 				WHERE 1 " . $data_limit;		$ret = $this->db->query_first($sql);		$ret['create_time']  = date('Y-m-d H:i',$ret['create_time']);			$ret['avatar'] = unserialize($ret['avatar']);		$ret['img'] = unserialize($ret['img']);		$ret['video'] = unserialize($ret['video']);		$ret['music'] = unserialize($ret['music']);		$ret['source_info'] = unserialize($ret['source_info']);		$ret['picsize'] = unserialize($ret['picsize']);		if(!empty($ret['source_info']))		{			$ret['source_info']['create_time'] = date('Y-m-d H:i',$ret['source_info']['create_time']);		}		unset($ret['weibo_info']);			if($ret)		{			$this->addItem($ret);			$this->output();		}		else		{			$this->errorOutput('查询失败');		}	}		public function count()	{		$condition = $this->get_condition();		if(!empty($this->input['_id']))		{					$sql = "SELECT count(*) AS total FROM " . DB_PREFIX . "weibo_circle wc 				    LEFT JOIN " . DB_PREFIX ."weibo w						ON wc.weibo_id = w.id					WHERE 1  AND wc.circle_id = ".intval($this->input['_id']) . $condition;		}		else 		{			$sql = "SELECT count(*) AS total FROM " . DB_PREFIX ."weibo w 					WHERE 1 " . $condition;		}		$f = $this->db->query_first($sql);		echo json_encode($f);		}		public function get_condition()	{		$condition = '';				if($this->input['key'])		{			$condition .= " AND w.text LIKE '%" . trim(urldecode($this->input['key'])) . "%' ";		}					    if($this->input['date_search'])		{			$today = strtotime(date('Y-m-d'));			$tomorrow = strtotime(date('Y-m-d',TIMENOW+24*3600));			switch(intval($this->input['date_search']))			{				case 1://所有时间段					break;				case 2://昨天的数据					$yesterday = strtotime(date('y-m-d',TIMENOW-24*3600));					$condition .= " AND  w.create_time > '".$yesterday."' AND w.create_time < '".$today."'";					break;				case 3://今天的数据					$condition .= " AND  w.create_time > '".$today."' AND w.create_time < '".$tomorrow."'";					break;				case 4://最近3天					$last_threeday = strtotime(date('y-m-d',TIMENOW-2*24*3600));					$condition .= " AND  w.create_time > '".$last_threeday."' AND w.create_time < '".$tomorrow."'";					break;				case 5://最近7天					$last_sevenday = strtotime(date('y-m-d',TIMENOW-6*24*3600));					$condition .= " AND  w.create_time > '".$last_sevenday."' AND w.create_time < '".$tomorrow."'";					break;				default://所有时间段					break;			}		}				if($this->input['key'])		{			$condition .=" AND w.text LIKE '%".$this->input['key']."%'";		}        if ($this->input['uname'])         {            $condition .= " AND w.uname LIKE '%".trim($this->input['uname'])."%' ";        }		return $condition ;	}		}$out = new wb();if(!method_exists($out, $_INPUT['a'])){	$action = 'show';}else {	$action = $_INPUT['a'];}$out->$action(); ?>