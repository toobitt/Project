<?php/**************************************************************************** LivSNS 0.1* (C)2004-2010 HOGE Software.** $Id: user.php 7586 2013-04-19 09:40:56Z yaojian $***************************************************************************/require_once './global.php';include_once CUR_CONF_PATH . 'lib/user.class.php';include_once ROOT_PATH . 'lib/class/auth.class.php';define('MOD_UNIQUEID', 'user');  //模块标识class userApi extends appCommonFrm{	private $userApi;	private $auth;		public function __construct()	{		parent::__construct();		$this->userApi = new user();		$this->auth = new Auth();	}	public function __destruct()	{		parent::__destruct();		unset($this->userApi);		unset($this->auth);	}		/**	 * 获取用户	 */	public function show()	{		$cid = intval($this->input['cid']);		if ($cid <= 0) $this->errorOutput(PARAM_WRONG);		$data = array(			'count' => -1,			'condition' => array('cid' => $cid)		);		$user_info = $this->userApi->show($data);		if ($user_info)		{			$this->addItem($user_info);		}		$this->output();	}		/**	 * 获取单个用户	 */	public function detail()	{		$id = intval($this->input['uid']);		if ($id > 0)		{			$user_info = $this->userApi->detail('user', array('id' => $id));			if ($user_info)			{				if (unserialize($user_info['avatar']))				{					$user_info['avatar'] = unserialize($user_info['avatar']);				}				$this->addItem($user_info);			}		}		$this->output();	}		/**	 * 获取组织信息	 */	public function get_org()	{		$cid = intval($this->input['cid']);		if ($cid > 0)		{			$company_info = $this->userApi->detail('company', array('id' => $cid));			if ($company_info)			{				$result = $this->get_re_org($company_info['org_id']);				$this->addItem($result);			}		}		$this->output();	}		private function get_re_org($fid)	{		$org_info = $this->auth->get_org($fid);		if ($org_info) {			foreach ($org_info as $k => $v)			{				$org_info[$k]['sub'] = $this->get_re_org($v['id']);			}		}		return $org_info;	}		/**	 * 创建用户	 */	public function create()	{		$data = $this->filter_data();		$c_id = intval($this->input['c_id']);		if ($c_id <= 0 || empty($data['password']) || !$_FILES['Filedata'])		{			$this->errorOutput(PARAM_WRONG);		}		$companyInfo = $this->userApi->detail('company', array('id' => $c_id));		if (!$companyInfo) $this->errorOutput(PARAM_WRONG);		$roleArr = array();		$tradeInfo = $this->userApi->detail('trade', array('id' => $companyInfo['trade_id']));		if ($tradeInfo) $roleArr[$tradeInfo['role_id']] = $tradeInfo['role_id'];		$gradeInfo = $this->userApi->detail('grade', array('id' => $companyInfo['grade_id']));		if ($gradeInfo) $roleArr[$gradeInfo['role_id']] = $gradeInfo['role_id'];		$roleArr = implode(',', $roleArr);		$data['admin_role_id'] = $roleArr;		$user_info = $this->auth->create_user($data);		if (!$user_info) $this->errorOutput(FAILED);		$userData = array(			'id' => $user_info['id'],			'role_id' => $user_info['admin_role_id'],			'org_id' => $user_info['father_org_id'],			'c_id' => $companyInfo['id'],			's_id' => $companyInfo['site_id'],			'user_name' => $user_info['user_name'],			'password' => $user_info['password'],			'salt' => $user_info['salt'],			'brief' => $user_info['brief'],			'avatar' => $user_info['avatar'],			'create_time' => $user_info['create_time'],			'update_time' => $user_info['update_time']		);		$result = $this->userApi->create('user', $userData);		$this->addItem($result);		$this->output();	}		/**	 * 修改用户	 */	public function update()	{		$id = intval($this->input['uid']);		if ($id <= 0) $this->errorOutput(PARAM_WRONG);		$info = $this->userApi->detail('user', array('id' => $id));		if (!$info) $this->errorOutput(PARAM_WRONG);		$data = $this->filter_data();		$data['id'] = $id;		$data['admin_role_id'] = $info['role_id'];		$user_info = $this->auth->update_user($data);		if (!$user_info) $this->errorOutput(FAILED);		//更新本地数据		$updateData = array(			'role_id' => $user_info['admin_role_id'],			'org_id' => $user_info['father_org_id'],			'user_name' => $user_info['user_name'],			'brief' => $user_info['brief'],			'update_time' => $user_info['update_time']		);		if ($user_info['password']) $updateData['password'] = $user_info['password'];		if ($user_info['salt']) $updateData['salt'] = $user_info['salt'];		if ($user_info['avatar']) $updateData['avatar'] = $user_info['avatar'];		$result = $this->userApi->update('user', $updateData, array('id' => $id));		$this->addItem($result);		$this->output();	}		/**	 * 删除用户	 */	public function delete()	{		$ids = isset($this->input['id']) ? trim(urldecode($this->input['id'])) : '';		if (empty($ids)) $this->errorOutput(PARAM_WRONG);		$ids_arr = explode(',', $ids);		$ids_arr = array_filter($ids_arr);		if (!$ids_arr) $this->errorOutput(PARAM_WRONG);		$ids = implode(',', $ids_arr);		$info = $this->auth->delete_user($ids);		if ($info != 'success') $this->errorOutput(FAILED);		//删除本地数据		$this->userApi->delete('user', array('id' => $ids));		$this->addItem($ids_arr);		$this->output();	}		/**	 * 处理提交的数据	 */	private function filter_data()	{		$username = trim(urldecode($this->input['username']));		$password = trim(urldecode($this->input['pwd']));		$brief = trim(urldecode($this->input['intro']));		$org_id = intval($this->input['org_id']);		if (empty($username) || $org_id <= 0)		{			$this->errorOutput(PARAM_WRONG);		}		return array(			'user_name' => $username,			'password' => $password,			'brief' => $brief ? $brief : '',			'father_org_id' => $org_id		);	}}$out = new userApi();$action = $_INPUT['a'];if (!method_exists($out,$action)){	$action = 'show';}$out->$action();?>