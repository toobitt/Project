<?php/**************************************************************************** LivSNS 0.1* (C)2004-2010 HOGE Software.** $Id: organization.php 7586 2013-04-19 09:40:56Z yaojian $***************************************************************************/require_once './global.php';include_once ROOT_PATH . 'lib/class/auth.class.php';define('MOD_UNIQUEID', 'organization');  //模块标识class organizationApi extends appCommonFrm{	private $auth;		public function __construct()	{		parent::__construct();		$this->auth = new Auth();	}	public function __destruct()	{		parent::__destruct();		unset($this->auth);	}		/**	 * 获取组织机构	 */	public function show()	{		$fid = intval($this->input['fid']);		if ($fid <= 0) $this->errorOutput(PARAM_WRONG);		$org_info = $this->auth->get_org($fid);		$this->addItem($org_info);		$this->output();	}		/**	 * 获取单个组织	 */	public function detail()	{		$id = intval($this->input['id']);		if ($id > 0)		{			$org_info = $this->auth->get_one_org($id);			$this->addItem($org_info[0]);		}		$this->output();	}		public function showAll()	{		$fid = intval($this->input['fid']);		if ($fid <= 0) $this->errorOutput(PARAM_WRONG);		$result = $this->get_re_org($fid);		$this->addItem($result);		$this->output();	}		private function get_re_org($fid)	{		$org_info = $this->auth->get_org($fid);		if ($org_info) {			foreach ($org_info as $k => $v)			{				$org_info[$k]['sub'] = $this->get_re_org($v['id']);			}		}		return $org_info;	}		/**	 * 创建组织机构	 */	public function create()	{		$data = $this->filter_data();		$result = $this->auth->create_org($data);		$this->addItem($result);		$this->output();	}		/**	 * 修改组织机构	 */	public function update()	{		$id = intval($this->input['id']);		if ($id <= 0) $this->errorOutput(PARAM_WRONG);		$data = $this->filter_data();		$data['id'] = $id;		$result = $this->auth->update_org($data);		$this->addItem($result);		$this->output();	}		/**	 * 删除组织机构	 */	public function delete()	{		$ids = isset($this->input['id']) ? trim(urldecode($this->input['id'])) : '';		if (empty($ids)) $this->errorOutput(PARAM_WRONG);		$ids_arr = explode(',', $ids);		$ids_arr = array_filter($ids_arr);		if (!$ids_arr) $this->errorOutput(PARAM_WRONG);		$out = array();		foreach ($ids_arr as $id)		{			$result = $this->auth->delete_org($id);			if ($result == 'success') $out[] = $id;		}		$this->addItem($out);		$this->output();	}		/**	 * 处理提交的数据	 */	private function filter_data()	{		$orgName = trim(urldecode($this->input['org_name']));		$orgIntro = trim(urldecode($this->input['org_intro']));		$parent_id = intval($this->input['fid']);		if (empty($orgName) || $parent_id < 0)		{			$this->errorOutput(PARAM_WRONG);		}		return array(			'name' => $orgName,			'brief' => $orgIntro ? $orgIntro : '',			'fid' => $parent_id		);	}}$out = new organizationApi();$action = $_INPUT['a'];if (!method_exists($out,$action)){	$action = 'show';}$out->$action();?>