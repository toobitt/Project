<?php/**************************************************************************** LivSNS 0.1* (C)2004-2010 HOGE Software.** $Id: columns.php 7586 2013-04-19 09:40:56Z yaojian $***************************************************************************/require_once './global.php';include_once ROOT_PATH . 'lib/class/publishconfig.class.php';require_once ROOT_PATH . 'lib/class/applant.class.php';include_once CUR_CONF_PATH . 'lib/column.class.php';define('MOD_UNIQUEID', 'column');  //模块标识class columnApi extends appCommonFrm{	private $site;	private $column;    private $app;		public function __construct()	{		parent::__construct();		$this->site = new publishconfig();		$this->column = new column();        $this->app = new applant();	}	public function __destruct()	{		parent::__destruct();		unset($this->site);		unset($this->column);	}		/**	 * 获取站点栏目信息	 */	public function show()	{		$site_id = intval($this->input['sid']);		if ($site_id <= 0) $this->errorOutput(PARAM_WRONG);		$fields = isset($this->input['fields']) ? trim(urldecode($this->input['fields'])) : '*';		$fid = isset($this->input['fid']) ? intval($this->input['fid']) : 0;		if ($fid < 0) $this->errorOutput(PARAM_WRONG);		$where = ' AND site_id = ' . $site_id . ' AND fid = ' . $fid;		$column_info = $this->site->get_column($fields, $where);		$this->addItem($column_info);		$this->output();	}		/**	 * 获取单个栏目	 */	public function detail()	{		$id = intval($this->input['id']);		if ($id > 0)		{			$fields = $this->input['fields'] ? trim(urldecode($this->input['fields'])) : '*';			$column_info = $this->site->get_column_first($fields, $id);			$parent_info = $this->site->get_column_first('name', $column_info['fid']);			$column_info['parent_name'] = $parent_info ? $parent_info['name'] : '';			$this->addItem($column_info);		}		$this->output();	}		/**	 * 创建栏目	 */	public function create()	{		$data = $this->filter_data();		$data['fast_add_column'] = 1;		$result = $this->site->edit_column($data);		$this->addItem($result);		$this->output();	}		/**	 * 修改栏目	 */	public function update()	{		$id = intval($this->input['id']);		if ($id <= 0) $this->errorOutput(PARAM_WRONG);		$data = $this->filter_data();		$data['column_id'] = $id;		$result = $this->site->edit_column($data);		$this->addItem($result);		$this->output();	}	public function delete()	{		$ids = isset($this->input['id']) ? trim(urldecode($this->input['id'])) : '';		if (!$ids)		{			$this->errorOutput(PARAM_WRONG);		}		$ids_arr = explode(',', $ids);		$ids_arr = array_filter($ids_arr);		if (empty($ids_arr))		{			$this->errorOutput(PARAM_WRONG);		}		//删除栏目关系进入栏目队列		$this->column->dealColumnData($ids_arr);		foreach ($ids_arr as $v)		{			$result = $this->site->delete_column($v);			if ($result == 'success')			{				$this->addItem($v);			}		}		$this->output();	}		/**	 * 处理提交的数据	 */	private function filter_data()	{		$columnName = trim(urldecode($this->input['col_name']));		$site_id = intval($this->input['siteId']);		$columnIntro = trim(urldecode($this->input['col_intro']));		$parent_id = intval($this->input['pid']);		$is_outlink = intval(!!$this->input['outsideLink']);		$linkUrl = trim(urldecode($this->input['col_link']));		if (empty($columnName) || $site_id <= 0 || $parent_id < 0)		{			$this->errorOutput(PARAM_WRONG);		}		if (!$is_outlink) $linkUrl = '';		return array(			'column_name' => $columnName,			'site_id' => $site_id,			'content' => $columnIntro ? $columnIntro : '',			'column_fid' => $parent_id,			'is_outlink' => $is_outlink,			'linkurl' => $linkUrl		);	}			/**	 * 子栏目排序	 */	public function childColumnsSort()	{		$newColumnIds = trim($this->input['newColumnIds']);		$parentId = intval($this->input['parentId']);		if(!$newColumnIds)		{			$this->errorOutput('no_new');		}		if(!$parentId)		{			$this->errorOutput('no_parent');		}		$ret = $this->site->childColumnsSort($newColumnIds , $parentId);		if($ret)		{			$this->addItem($ret);		}		$this->output();			}    /**     * 获取app所有模块栏目     */    public function getAppColumn()    {        $site = $this->input['site_id'];        if(!$site)        {            $this->errorOutput(NO_SITE_ID);        }        $colmuns_info = $this->site->get_column_by_site($site,'id,name,is_last');        if($colmuns_info)        {            $column['main'] = $colmuns_info[0] ? $colmuns_info[0] : array();            unset($colmuns_info[0]);            $column['child'] = $colmuns_info ? $colmuns_info : array();        }        if($this->input['app_id'])        {            $column_ids_arr = '';            foreach($column['main'] as $k=>$v)            {                $column_ids_arr .= $v['id'].",";            }            $column_ids = trim($column_ids_arr,",");            if($column_ids)            {                $moduleTypeArray = $this->app->getAllModuleByColumnIds($column_ids);            }		    $app_id = $this->input['app_id'];			$moduleIdArray = $this->app->getColumnsByModule($app_id);        }        else        {            $this->errorOutput(NO_COLUMN);        }        foreach($column['main'] as $k=>$v)        {			if(in_array($v['id'],$moduleIdArray))			{				if($moduleTypeArray)				{					foreach($moduleTypeArray as $ko=>$vo)					{						if($v['id'] == $ko)						{							$column['main'][$k]['module_type'] = $vo;						}					}				}				if($column['child'])				{					foreach($column['child']  as $ko=>$vo)					{						if($v['id'] == $ko)						{							$column['main'][$k]['child'] = $vo;						}					}				}				$result[] = $column['main'][$k];			}			else			{				unset($column['main'][$k]);			}        }        $this->addItem($result);        $this->output();    }	}$out = new columnApi();$action = $_INPUT['a'];if (!method_exists($out,$action)){	$action = 'show';}$out->$action();?>