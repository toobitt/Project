<?phpclass photoeditClass extends InitFrm{	public function __construct()	{		parent::__construct();	}		public function __destruct()	{		parent::__destruct();	}		public function show($offset, $count, $data)	{		if ($count != -1)		{			$data_limit = ' LIMIT ' . $offset . ' , ' . $count;		}		$sql = 'SELECT * FROM ' . DB_PREFIX . 'photoedit WHERE active = 1';		if ($data && is_array($data))		{			$condition = $this->get_condition($data);		}		elseif ($data && is_string($data))		{			$condition = $data;		}		if ($condition) $sql .= $condition;				$sql .= ' ORDER BY order_id asc,id DESC';		if ($data_limit) $sql .= $data_limit;		$query = $this->db->query($sql);		$info = array();		while ($rows = $this->db->fetch_array($query))		{			$info[] = $rows;		}		return $info;	}		//根据关键字查询总数	public function count($data)	{		$sql = 'SELECT COUNT(id) AS total FROM ' . DB_PREFIX . 'photoedit WHERE active = 1';		return $this->db->query_first($sql);	}		//通过图片名称查询是否存在	public function extis_pic($filename)	{		$sql = 'SELECT * FROM ' . DB_PREFIX . 'photoedit WHERE active = 1 and filename = "'.$filename.'" ';		$result = array();		$result = $this->db->query_first($sql);		return $result;	}		//信息基本信息读取 $id	public function detail($id)	{		$sql = 'SELECT * FROM ' . DB_PREFIX . 'photoedit WHERE active = 1 and id = ' . $id;		$result = array();		$result = $this->db->query_first($sql);		return $result;	}		//读取完整图片路径 $id	public function detail_img($id)	{		$sql = 'SELECT * FROM ' . DB_PREFIX . 'photoedit WHERE id = ' . $id;		$result = array();		$result = $this->db->query_first($sql);		$imgurl = $result['host'].$result['dir'].$result['filepath'].$result['filename'];		return $imgurl;	}		//同类型图片读取 $fid	public function detail_f($id)	{		//原来的		//$sql = 'SELECT * FROM ' . DB_PREFIX . 'photoedit_list WHERE active = 1 and fid = ' . $id;		$sql = 'SELECT * FROM ' . DB_PREFIX . 'photoedit_list WHERE fid = ' . $id;		$sql .= ' ORDER BY update_time DESC,id desc';		$query = $this->db->query($sql);		$info = array();		while ($rows = $this->db->fetch_array($query))		{			$info[] = $rows;		}		return $info;	}			//基本信息添加操作	public function create($data)	{		$fields = array();		foreach($data as $k=>$v)		{			if (is_string($v))			{				$fields[] = $k . "='" . $v . "'";			}			elseif (is_int($v))			{				$fields[] = $k . '=' . $v;			}		}		$sql = 'INSERT INTO ' . DB_PREFIX . 'photoedit SET ' . implode(',', $fields);		$this->db->query($sql);				$data['id'] = $this->db->insert_id();		if ($data['id'])		{			return $data;		}		return false;	}		//历史痕迹增加	public function create_list($data)	{		$fields = array();		foreach($data as $k=>$v)		{			if (is_string($v))			{				$fields[] = $k . "='" . $v . "'";			}			elseif (is_int($v))			{				$fields[] = $k . '=' . $v;			}		}		$sql = 'INSERT INTO ' . DB_PREFIX . 'photoedit_list SET ' . implode(',', $fields);		$this->db->query($sql);		$insert_id = $this->db->insert_id();		$data['insert_id'] = $insert_id;		return $data;	}			//更新基本信息	public function update($data, $id)	{		$fields = array();		foreach($data as $k=>$v)		{			if (is_string($v))			{				$fields[] = $k . "='" . $v . "'";			}			elseif (is_int($v))			{				$fields[] = $k . '=' . $v;			}		}		$sql = 'UPDATE ' . DB_PREFIX . 'photoedit SET ' . implode(',', $fields) . ' WHERE 1';		if (is_int($id))		{			$sql .= ' AND id = ' . $id;		}		elseif (is_string($id))		{			$sql .= ' AND id in (' . $id . ')';		}		$this->db->query($sql);		return $data;	}		public function delete($id)	{		$sql = 'UPDATE ' . DB_PREFIX . 'photoedit SET active = 0 WHERE 1';		if (is_int($id))		{			$sql .= ' AND id = ' . $id;		}		elseif (is_string($id))		{			$sql .= ' AND id in (' . $id . ')';		}		return $this->db->query($sql);	}		public function emptyData($table)	{		$sql = 'TRUNCATE ' . DB_PREFIX . $table;		return $this->db->query($sql);	}		public function get_condition($data)	{		$condition = '';				//查询的关键字		if(isset($data['key']))		{			$keyword = htmlspecialchars(trim(urldecode($data['key'])));			$condition .= " AND filename LIKE '%" . $keyword . "%' ";		}		return $condition;	}	}?>