<?php/**************************************************************************** LivSNS 0.1* (C)2004-2010 HOGE Software.** $Id:$***************************************************************************/require_once('global.php');require_once(ROOT_PATH.'lib/class/publishcontent.class.php');require_once(ROOT_PATH.'lib/class/publishplan.class.php');define('MOD_UNIQUEID','tuji');class  tuji_publish  extends appCommonFrm{    public function __construct()	{		parent::__construct();	}		public function __destruct()	{		parent::__destruct();	}		public function unknow()	{		$this->errorOutput(NOMETHOD);	}		//获取图集内容	public function get_tuji_content()	{		$id = intval($this->input['from_id']);		$sort_id = intval($this->input['sort_id']);		$offset = $this->input['offset'] ? intval($this->input['offset']) : 0;					$num = $this->input['num'] ? intval($this->input['num']) : 10;		$data_limit = ' LIMIT ' . $offset . ' , ' . $num;		if($id)		{			$sql = "SELECT t.*,p.img_info FROM " . DB_PREFIX ."tuji t 					LEFT JOIN ". DB_PREFIX."pics p 						ON t.index_id = p.id 					WHERE 1 AND t.id = {$id}";		}		else		{			$sql = "SELECT t.*,p.img_info FROM " . DB_PREFIX ."tuji t 					LEFT JOIN ".DB_PREFIX."pics p 						ON t.index_id = p.id  					WHERE 1 AND t.tuji_sort_id = {$sort_id}";		}		$info = $this->db->query($sql);		$ret = array();		while($row = $this->db->fetch_array($info))		{			$row['content_fromid'] = $row['id'];			$img_info =  unserialize($row['img_info']);			$row['indexpic'] =$img_info;			$row['ip'] = hg_getip();			$row['user_id'] = $this->user['user_id'];			$row['user_name'] = $this->user['user_name'];			$row['brief'] = $row['comment'];			unset($row['id']);			$ret[] = $row;		}				$this->addItem($ret);		$this->output();	}		//获取图集里面的图片	public function get_tuji_pics_content()	{		$id = intval($this->input['from_id']);		$offset = $this->input['offset'] ? intval($this->input['offset']) : 0;					$num = $this->input['num'] ? intval($this->input['num']) : 10;		$data_limit = ' LIMIT ' . $offset . ' , ' . $num;				$sql = "SELECT * FROM " . DB_PREFIX . "tuji WHERE 1 AND id=".$id;		$tuji_info = $this->db->query_first($sql);				if($this->input['is_update'])		{			$sql = "SELECT * FROM " . DB_PREFIX ."pics WHERE id = {$id} " . $data_limit;		}		else 		{			$sql = "SELECT * FROM " . DB_PREFIX ."pics WHERE tuji_id = {$id} AND expand_id = ''".$data_limit;		}		$info = $this->db->query($sql);		$ret = array();		while($row = $this->db->fetch_array($info))		{			$row['expand_id'] = $tuji_info['expand_id'];			$row['content_fromid'] = $row['id'];			$row['indexpic'] = '';			$row['ip'] = hg_getip();			$row['user_id'] = $this->user['user_id'];			$row['user_name'] = $this->user['user_name'];			$row['pic'] = $row['img_info'];			$row['title'] = $row['old_name'];			$row['brief'] = $row['description'];			unset($row['id'],$row['img_info']);			$ret[] = $row;		}		$this->addItem($ret);		$this->output();	}		//更新图集栏目id	public function update_tuji_column_id()	{		$data = $this->input['data'];		if(empty($data))		{			return false;		}		$sql = "select * from " . DB_PREFIX ."tuji where id = " . $data['from_id'];		$ret = $this->db->query_first($sql);		if(intval($ret['status']) != 1)		{			$sql = "update " . DB_PREFIX ."tuji set expand_id = 0,column_url = '' where id = " . $data['from_id'];		}			else 		{			$column_id = unserialize($ret['column_id']);	   //发布栏目				$column_url = unserialize($ret['column_url']);	   //栏目url，发布对比，有删除栏目则删除对于栏目url			$url = array();			if(!empty($column_url) && is_array($column_url))			{				foreach($column_url as $k => $v)				{					if($column_id[$k])					{						$url[$k] = $v;					}				}			}			if(!empty($data['content_url']) && is_array($data['content_url']))			{				foreach($data['content_url'] as $k => $v)				{					$url[$k] = $v;				}			}			$sql = "UPDATE " . DB_PREFIX . "tuji SET expand_id = " . $data['expand_id'] . ", column_url = '" .serialize($url). "' where id = " . $data['from_id'];		}		$this->db->query($sql);		if(empty($data['expand_id']))		{			$this->update_tuji_pics_column_id($data);		}		$this->addItem('success');		$this->output();	}		//更新图集图片栏目id	public function update_tuji_pics_column_id($data = array())	{		if(empty($data))		{			$data = $this->input['data'];			if(empty($data))			{				return false;			}			$sql = "UPDATE " . DB_PREFIX. "pics SET expand_id = " . $data['expand_id'] . " WHERE id =" . $data['from_id'];			$this->db->query($sql);			$this->addItem('success');			$this->output();		}		else 		{			$sql = "UPDATE " . DB_PREFIX. "pics SET expand_id = " . $data['expand_id'] . " WHERE tuji_id =" . $data['from_id'];			$this->db->query($sql);			$this->addItem('true');			$this->output();					}	}		//在发布系统里面创建表	public function create_tuji_publish_table()	{		$table = new publishcontent();		$data = array(			'bundle_id'     => APP_UNIQUEID, 			'module_id'     => MOD_UNIQUEID,			'struct_id'     => "tuji",			'struct_ast_id' => "",			'field'         => "id,expand_id,content_fromid,title,brief,tuji_sort_id,default_comment,user_name,create_time,ip,update_time,status,total_pic,keywords,total_visit,total_comment,cover_url,path,order_id,auto_cover,is_namecomment,is_orderby_name,is_add_water,water_id,tuji_source,url,weight",			'array_field'   => "cover_url,latest",			'array_child_field'   => "pic,img_info",			'table_title'   => "图集",			'field_sql'   	=> "  `id` int(11) NOT NULL AUTO_INCREMENT,		  						  `expand_id` int(10) DEFAULT NULL,		  						  `content_fromid` int(10) DEFAULT NULL,		  						  `title` varchar(150) DEFAULT NULL COMMENT '内容标题',		  						  `brief` varchar(500) DEFAULT NULL COMMENT '内容简要',								  `tuji_sort_id` int(10) NOT NULL COMMENT '关联图集分类ID',								  `default_comment` varchar(1000) DEFAULT NULL COMMENT '图集默认描述（用于其底下的图片继承用的）',								  `user_name` char(64) NOT NULL,								  `create_time` int(10) NOT NULL COMMENT '创建时间',								  `ip` char(20) NOT NULL COMMENT '创建IP',								  `update_time` int(10) NOT NULL COMMENT '修改时间',								  `status` tinyint(2) NOT NULL COMMENT '状态 -1=>未审核 1=>已审核 2=>打回 ',								  `total_pic` int(10) NOT NULL COMMENT '图片总数',								  `keywords` varchar(250) DEFAULT NULL COMMENT '关键字',								  `total_visit` int(10) NOT NULL COMMENT '图集访问量',								  `total_comment` int(10) NOT NULL COMMENT '图集评论数',								  `cover_url` varchar(250) NOT NULL COMMENT '图集封面',								  `path` varchar(250) NOT NULL COMMENT '图集目录',								  `order_id` int(10) NOT NULL DEFAULT '0' COMMENT '排序id',								  `auto_cover` tinyint(2) NOT NULL DEFAULT '0' COMMENT '是否自动设置封面',								  `is_namecomment` tinyint(2) NOT NULL DEFAULT '0' COMMENT '是否以图片名作为描述',								  `is_orderby_name` tinyint(2) NOT NULL DEFAULT '0' COMMENT '是否以图片名排序',								  `is_add_water` tinyint(2) NOT NULL DEFAULT '0' COMMENT '是否增加水印',								  `water_id` int(10) NOT NULL DEFAULT '0' COMMENT '所用水印id',								  `tuji_source` int(10) NOT NULL DEFAULT '0' COMMENT '图集来源',								  `url` varchar(200) NOT NULL COMMENT '外联',									  `weight` int(10) NOT NULL COMMENT '权重',									  PRIMARY KEY (`id`)",			'show_field' => array(					0 => array('field'=>'title'      ,'title'=>'标题'	  ,'type'=>'text'),					1 => array('field'=>'brief'      ,'title'=>'内容简要'   ,'type'=>'text'),					2 => array('field'=>'user_name'  ,'title'=>'添加人'     ,'type'=>'text'),					3 => array('field'=>'create_time','title'=>'创建时间'   ,'type'=>'text'),					4 => array('field'=>'ip'         ,'title'=>'ip'       ,'type'=>'text'),				),			'child_table'=>'tuji_pics',		);		$ret = $table->create_table($data);		$this->addItem($ret);		$this->output();	}		//在发布系统里面创建表	public function create_tuji_pics_publish_table()	{		$table = new publishcontent();		$data = array(			'bundle_id'     => APP_UNIQUEID, 			'module_id'     => MOD_UNIQUEID,			'struct_id'     => "tuji",			'struct_ast_id' => "tuji_pics",			'field'         => "id,expand_id,content_fromid,title,brief,tuji_id,material_id,old_name,new_name,thumb_name,path,total_visit,status,is_cover,create_time,update_time,ip,order_id,pic",			'array_field'   => "pic,img_info",			'array_child_field'   => "",			'table_title'   => "图片",			'field_sql'   	=> "  `id` int(11) NOT NULL AUTO_INCREMENT,		  						  `expand_id` int(10) DEFAULT NULL,		  						  `content_fromid` int(10) DEFAULT NULL,		  						  `title` varchar(150) DEFAULT NULL COMMENT '内容标题',		  						  `brief` varchar(500) DEFAULT NULL COMMENT '内容简要',		  						  `tuji_id` int(10) NOT NULL COMMENT '关联图集ID',								  `material_id` int(10) NOT NULL DEFAULT '0' COMMENT '素材id',								  `old_name` varchar(250) NOT NULL COMMENT '原始文件名称',								  `new_name` varchar(250) NOT NULL COMMENT '上传之后的文件名',								  `thumb_name` varchar(250) NOT NULL COMMENT '缩略图名称',								  `path` varchar(250) NOT NULL,								  `total_visit` int(10) NOT NULL,								  `status` tinyint(2) NOT NULL COMMENT '0=>新增 1=>审核通过 2=>软删除 3=>彻底删除',								  `is_cover` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否是封面',								  `create_time` int(10) NOT NULL COMMENT '上传时间',								  `update_time` int(10) NOT NULL COMMENT '修改时间',								  `ip` char(20) NOT NULL COMMENT '上传IP',								  `order_id` int(10) NOT NULL DEFAULT '0' COMMENT '排序id',								  `pic` varchar(500) NOT NULL COMMENT '图片串行话',								  PRIMARY KEY (`id`)",			'show_field' => array(					0 => array('field'=>'title'      ,'title'=>'标题'	  ,'type'=>'text'),					1 => array('field'=>'brief'      ,'title'=>'内容简要'   ,'type'=>'text'),					2 => array('field'=>'pic'        ,'title'=>'图片路径'   ,'type'=>'img'),					3 => array('field'=>'user_name'  ,'title'=>'添加人'     ,'type'=>'text'),					3 => array('field'=>'create_time','title'=>'创建时间'   ,'type'=>'text'),					5 => array('field'=>'ip'         ,'title'=>'ip'       ,'type'=>'text'),				),			'child_table'=>'',		);		$ret = $table->create_table($data);		$this->addItem($ret);		$this->output();	}		/**	 * 发布系统删除某条内容时执行改方法	 */	public function publish_delete_callback()	{		$data = $this->input['data'];		if(empty($data))		{			return false;		}		if($data['is_delete_column'])   //只删除某一栏目中内容		{			$sql = "SELECT column_id,column_url FROM " . DB_PREFIX ."tuji WHERE id = " . $data['from_id'];			$ret = $this->db->query_first($sql);			$column_id = unserialize($ret['column_id']);			$column_url = unserialize($ret['column_url']);			$del_columnid = explode(',',$data['column_id']);			if(is_array($del_columnid))			{				foreach($del_columnid as $k => $v)				{					unset($column_id[$v],$column_url[$v]);					}			}			$sql = "UPDATE " . DB_PREFIX ."tuji SET column_id = '".addslashes(serialize($column_id))."',column_url = '".addslashes(serialize($column_url))."' WHERE id = " . $data['from_id'];			$this->db->query($sql);								}			else		//全部删除		{			$sql = "UPDATE " . DB_PREFIX . "tuji SET expand_id = '' AND column_id = '' AND column_url = '' WHERE id = " . $data['from_id'];			$this->db->query($sql);				$sql = "UPDATE " . DB_PREFIX . "pics SET expand_id = '' WHERE tuji_id = " . $data['from_id'];			$this->db->query($sql);		}		$this->addItem('true');		$this->output();	}}$out = new tuji_publish();if(!method_exists($out, $_INPUT['a'])){	$action = 'unknow';}else {	$action = $_INPUT['a'];}$out->$action(); ?>