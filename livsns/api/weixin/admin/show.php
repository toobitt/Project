<?php/**************************************************************************** LivSNS 0.1* (C)2004-2010 HOGE Software.** $Id: show.php 12433 2012-10-11 09:59:16Z yj $***************************************************************************/require_once './global.php';require_once CUR_CONF_PATH . 'lib/wx.class.php';include_once ROOT_PATH . 'lib/class/material.class.php';define('MOD_UNIQUEID', 'weixin'); //模块标识class showApi extends adminReadBase{	private $weixin;		public function __construct()	{		parent::__construct();		$this->weixin = new wxApi();	}	public function __destruct()	{		parent::__destruct();		unset($this->weixin);	}		public function index() {}		/**	 * 获取微信数据	 */	public function show()	{		$offset = isset($this->input['offset']) ? intval($this->input['offset']) : 0;		$count = isset($this->input['count']) ? intval($this->input['count']) : 20;		$condition = $this->filter_data();		$data = array(			'offset' => $offset,			'count' => $count,			'condition' => $condition		);		$wx_info = $this->weixin->show($data);		$this->setXmlNode('wx_info', 'wx');		if ($wx_info) {			foreach ($wx_info as $wx)			{				$this->addItem($wx);			}		}		$this->output();	}		/**	 * 获取微信总数	 */	public function count()	{		$condition = $this->filter_data();		$info = $this->weixin->count($condition);		echo json_encode($info);	}		/**	 * 获取单个微信信息	 */	public function detail()	{		$id = isset($this->input['id']) ? intval($this->input['id']) : 0;		if (!$id) $this->errorOutput(PARAM_WRONG);		$wx_info = $this->weixin->detail($id);		$this->addItem($wx_info);		$this->output();	}		/**	 * 处理提交的数据	 */	private function filter_data()	{		$keyword = isset($this->input['k']) ? trim(urldecode($this->input['k'])) : '';		$type = isset($this->input['msg_type']) ? intval($this->input['msg_type']) : '';		$date = isset($this->input['date_search']) ? intval($this->input['date_search']) : '';		$start_time = trim($this->input['start_time']);		$end_time = trim($this->input['end_time']);		$star_type = isset($this->input['star_type']) ? intval($this->input['star_type']) : '';		$ids = isset($this->input['id']) ? trim(urldecode($this->input['id'])) : '';		$state = isset($this->input['state']) ? intval($this->input['state']) : '';		return array(			'keyword' => $keyword,			'type' => $type,			'start_time' => $start_time,			'end_time' => $end_time,			'date_search' => $date,			'star' => $star_type,			'id' => $ids,			'state' => $state		);	}}$out = new showApi();$action = $_INPUT['a'];if (!method_exists($out,$action)){	$action = 'show';}$out->$action();?>