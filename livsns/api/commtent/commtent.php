<?php/**************************************************************************** LivSNS 0.1* (C)2004-2010 HOGE Software.** $Id: create.php 12691 2012-10-19 09:30:41Z daixin $***************************************************************************/define('ROOT_DIR', '../../');require(ROOT_DIR . 'global.php');class activity extends BaseFrm{		function __construct()	{		parent::__construct();		require_once  'lib/discuss.class.php';		$this->discusslib = new discussLib();	}		public function checkUserExit()	{		//$this->user = array('user_id'=>123456,'user_name' => dai888);		if(!$this->user['user_id'])		{			$this->errorOutput("用户没有登录");		}		return array('user_id'=>$this->user['user_id'],'user_name' => $this->user['user_name']);	}		//参数获取	public function getData()	{		$data = array();		$data = $this->checkUserExit();		//名称		if(isset($this->input['action_id']))		{			$data['action_id'] = trim(urldecode($this->input['action_id']));		}		//分类		if(isset($this->input['reply_cid']))		{			$data['reply_cid'] = trim(urldecode($this->input['reply_cid']));		}		//活动logo		if(isset($this->input['reply_commtent']))		{			$data['reply_commtent'] = trim(urldecode($this->input['reply_commtent']));		}		//活动开始时间		if(isset($this->input['review']))		{			$data['review'] = trim(urldecode($this->input['review']));		}		//活动地点		if(isset($this->input['anonymous']))		{			$data['anonymous'] = trim(urldecode($this->input['anonymous']));		}		return $data;	}		//	public function create()	{		$data = array();		$data = $this->getData();		if(!$data['review'] || !$data['action_id'] )		{			$this->errorOutput("你的评论内容为空");		}		//加载创建时间		$data['create_time'] = TIMENOW;		//来源ip		$data['from_ip'] = hg_getip();		//来源客户端		$data['client'] = $_SERVER['HTTP_USER_AGENT'];				$data['app_name'] = $this->user['display_name'];		$cid = $this->discusslib->insert('commtent', $data);		if($cid)		{			$tata['thread_num'] = 1;			$this->discusslib->update('activity', $tata, array('action_id'=>$data['action_id']), $tata);		}		$this->setXmlNode('commtent', 'create');		$this->addItem_withkey('commtent_id',$cid);		$this->output();	}	//	public function update()	{		$data = array();		$data = $this->getData();		//活动id		if(isset($this->input['cid']))		{			$data['cid'] = trim($this->input['cid']);		}		if(!$data['cid'])		{			$this->errorOutput("你的评论ID不正确");		}		else 		{			$cid = $data['cid'];			unset($data['cid']);		}		//获取原始数据		$rawData = $this->discusslib->get('commtent','review,anonymous,edit_count', array('cid'=>$cid), 0, 1, array());		if(!$rawData)		{			$this->errorOutput("你的评论内容不存在");		}		else 		{			$res = true;			$edit_count = $rawData['edit_count'];			unset($rawData['edit_count']);			foreach($rawData as $k=>$v)			{				if($v != $data[$k])				{					$res = false;					break;				}			}		}				if(!$res)		{			$data['edit_count'] =  $edit_count + 1;			if(defined('EDIT_LIMIT'))			{				if(EDIT_LIMIT)				{					if($data['edit_count'] > EDIT_LIMIT)					{						$this->errorOutput("你的评论内容修改的次数过多");					}				}			}			$data['update_time'] = TIMENOW;		}		$result = $this->discusslib->update('commtent', $data, array('cid'=>$cid), array());		$this->setXmlNode('commtent', 'update');		$this->addItem_withkey('state',$result);		$this->output();	}	//	public function delete()	{		$data = array();		$data = $this->getData();		//活动id		if(isset($this->input['cid']))		{			$data['cid'] = trim($this->input['cid']);		}		if(!$data['cid'])		{			$this->errorOutput("你的评论ID不正确");		}		else 		{			$cid = $data['cid'];			unset($data['cid']);		}		$rawData = $this->discusslib->get('commtent','count(cid) as total,reply_cid,action_id', array('cid'=>$cid,'state'=>1), 0, 1, array());		if(!$rawData)		{			$this->errorOutput("你的评论内容不存在");		}		//$result = $this->discusslib->delete('commtent', array('cid'=>$cid));		$result = $this->discusslib->update('commtent', array('state'=>0), array('cid'=>$cid,'state'=>1), array());		if($result)		{			//if(defined('DELETE_TYPE') && DELETE_TYPE == 'discuss')			//{			$tata['thread_num'] = -1;			$this->discusslib->update('activity', $tata, array('action_id'=>$rawData['action_id']), $tata);			//}		}		$this->setXmlNode('commtent', 'delete');		$this->addItem_withkey('state',$result);		$this->output();	}		public function show()	{		$offset = isset($this->input['offset']) ? intval($this->input['offset']) : 0;		$count = isset($this->input['count']) ? intval($this->input['count']) : 10;		$type = isset($this->input['type']) ? 'desc' : 'asc';		$action_id = trim(urldecode($this->input['action_id']));		if(!$action_id || !is_numeric($action_id))		{			$this->errorOutput("你搜索得活动id参数不合法");		}		$this->setXmlNode('commtent', 'show');		$result['total'] = $this->discusslib->get('commtent', 'count(cid) as total', array('action_id'=>$action_id,'state'=>1), 0, 1, array('create_time'=>$type));		$this->addItem_withkey('total', $result['total']);		if($result['total'])		{			$data = $this->discusslib->get('commtent', '*', array('action_id'=>$action_id,'state'=>1), $offset, $count, array('create_time'=>$type));			$arr = array();			if($data)			{				$user_ids = $sp = '';				foreach($data as $k => $v)				{					$arr[$v[cid]] = $v;					$user_ids .= $sp . $v['user_id'];					$sp = ",";				}				if($user_ids)				{					$this->addItem_withkey('user_ids', $user_ids);				}			}			$this->addItem_withkey('info', $arr);		}						$this->output();	}		public function count()	{		//获取选取条件		$data =  array();		$data = $this->getCondition();		$result['total'] = $this->discusslib->get('commtent', 'count(cid) as total', array('action_id'=>$action_id,'state'=>1), 0, 1, array('create_time'=>$type));		$this->setXmlNode('commtent', 'count');		$this->addItem_withkey('total',$result['total']);		$this->output();	}		//		//失误方法	function unknow()	{		$this->errorOutput("你搜索得方法不存在");	}	function __destruct()	{		parent::__destruct();		unset($this->discusslib);	}	}$out = new activity();$action = $_REQUEST['a'];if (!method_exists($out,$action)){	$action = 'unknow';}$out->$action();