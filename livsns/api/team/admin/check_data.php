<?phprequire_once './global.php';include_once ROOT_PATH . 'lib/class/option.class.php';class checkDataApi extends adminBase{		public function __construct()	{		parent::__construct();	}		public function __destruct()	{		parent::__destruct();	}		/**	 * 校验数据	 */	public function updateData()	{		//校验小组对应的数据		$this->updateTeamTypeNum();		$this->updateTeamCategoryNum();		$this->updateTeamAttentionNum();		$this->updateTeamTopicNum();		$this->updateTeamActionNum();		$this->updateTeamApplyActionNum();		$this->updateTeamVisitNum();		$this->updateTeamBlackList();		$this->updateTeamApply();				//校验话题对应的数据		$this->updateTopicFavorNum();		$this->updateTopicMaterialNum();		$this->updateTopicVideo();		$this->updateTopicReplyNum();		$result = $this->updateTopicVisitNum();		$this->addItem($result);		$this->output();	}		//更新小组类型下的小组数目	private function updateTeamTypeNum()	{		//删除对应不存在的数据		$sql = 'DELETE FROM `liv_team` WHERE team_id in (SELECT team_id FROM (SELECT tm.team_id FROM `liv_team` tm LEFT JOIN `liv_team_type` tt ON tm.team_type = tt.type_id WHERE tt.type_id IS NULL) AS team)';		$this->db->query($sql);		//更新对应数据		$sql = 'UPDATE `liv_team_type` tt, (SELECT team_type, count(team_id) AS num FROM `liv_team` WHERE state = 1 GROUP BY team_type) t SET tt.team_num = t.num WHERE tt.type_id = t.team_type';		return $this->db->query($sql);	}		//更新小组分类下的小组数目	private function updateTeamCategoryNum()	{		//删除对应不存在的数据		$sql = 'DELETE FROM `liv_team` WHERE team_id in (SELECT team_id FROM (SELECT tm.team_id FROM `liv_team` tm LEFT JOIN `liv_team_category` tc ON tm.team_category = tc.c_id WHERE tc.c_id IS NULL) AS team)';		$this->db->query($sql);		//更新对应数据		$sql = 'UPDATE `liv_team_category` tc, (SELECT team_category, count(team_id) AS num FROM `liv_team` WHERE state = 1 GROUP BY team_category) t SET tc.team_num = t.num WHERE tc.c_id = t.team_category';		return $this->db->query($sql);	}		//更新小组下的关注者数目	private function updateTeamAttentionNum()	{			//先查询关注信息		$option = new option();		$attention = $option->get_attention('team', 'attention');		$team_ids = array();		if ($attention && is_array($attention))		{			foreach ($attention as $k => $v)			{				$team_ids[] = $k;			}		}		if ($team_ids && is_array($team_ids))		{			$sql = 'SELECT team_id, state FROM `liv_team` WHERE team_id in (' . implode(',', $team_ids) . ')';			$query = $this->db->query($sql);			$info = array();			$state = array();			while ($row = $this->db->fetch_array($query))			{				$info[] = $row['team_id'];				$state[$row['team_id']] = $row['state'];			}			$del_ids = '';			//$set_true = '';			$set_false = '';			$update_ids = array();			if ($info && $state)			{				foreach ($team_ids as $v)				{					if (!in_array($v, $info))					{						$del_ids .= implode(',', $attention[$v]) . ',';					}					else					{						if ($state[$v] == 1)						{							//$set_true .= implode(',', $attention[$v]) . ',';							$update_ids[$v] = count($attention[$v]);						}						else						{							$set_false .= implode(',', $attention[$v]) . ',';						}					}				}			}			$del_ids = trim($del_ids, ',');			//$set_true = trim($set_true, ',');			$set_false = trim($set_false, ',');			$option->del_attention($del_ids, $set_false, '', '');			if ($update_ids && is_array($update_ids))			{				//更新小组关注数据				foreach ($update_ids as $k => $v)				{					$sql = 'UPDATE `liv_team` SET `attention_num` = ' . $v . ' WHERE team_id = ' . $k;					$result = $this->db->query($sql);				}			}			return $result;		}	}		//更新小组下的话题数目	private function updateTeamTopicNum()	{		//删除对应的小组不存在的话题		$sql = 'DELETE FROM `liv_topic` WHERE topic_id in (SELECT topic_id FROM (SELECT tc.topic_id FROM `liv_topic` tc LEFT JOIN `liv_team` tm ON tc.source_id = tm.team_id WHERE tm.team_id IS NULL) AS topic)';		$this->db->query($sql);				//更新话题的状态		$sql = 'UPDATE `liv_topic` tc, (SELECT team_id FROM `liv_team` WHERE state = -1) AS t SET tc.state = 0, tc.type_state = "team" WHERE tc.source_id = t.team_id';		$this->db->query($sql);				//更新对应数据		$sql = 'UPDATE `liv_team` t, (SELECT source_id, count(topic_id) AS num FROM `liv_topic` WHERE state = 1 GROUP BY source_id) tc SET t.topic_num = tc.num WHERE t.team_id = tc.source_id';		return $this->db->query($sql);	}		//更新小组下的行动数目	private function updateTeamActionNum()	{		//删除对应的小组不存在的话题		$sql = 'DELETE FROM `liv_activity` WHERE action_id in (SELECT action_id FROM (SELECT a.action_id FROM `liv_activity` a LEFT JOIN `liv_team` tm ON a.team_id = tm.team_id WHERE tm.team_id IS NULL) AS activity)';		$this->db->query($sql);		//更新活动的开启关闭状态		$sql = "update liv_activity set isopen=0,state=1 where state=2";		$this->db->query($sql);		//更新行动数据		$sql = "update `liv_activity` set state=0,type_state='team' where team_id in (select team_id from liv_team where state=-1) and state =1";		$this->db->query($sql);		/*活动报名*/		//删除多余的活动报名		$sql = "delete from liv_activity_apply where action_id in (select * from (SELECT a.action_id FROM liv_activity_apply a LEFT JOIN liv_activity b ON a.action_id = b.action_id WHERE b.action_id IS NULL  GROUP BY a.action_id)c)";		$this->db->query($sql);		//更新报名表		$sql = "update liv_activity_apply set type_state='' where type_state='0' ";		$this->db->query($sql);		//数据统一		$sql = "update liv_activity a,(SELECT action_id, count( 1 ) AS num, sum( part_num ) AS sign FROM `liv_activity_apply` 					GROUP BY action_id HAVING num)b  set a.yet_join=b.sign,a.apply_num=b.num where a.action_id=b.action_id ";		$this->db->query($sql);		/*活动回顾*/		//更新报名表		$sql = "update liv_activity_review a, (SELECT action_id, team_id, state, if( type_state = '', if( state =1, '', 'activity' ) , 'team' ) AS type_state FROM `liv_activity` WHERE 1  )b set a.team_id=b.team_id,a.state=b.state,a.type_state=b.type_state where a.action_id=b.action_id";		$this->db->query($sql);		//数据更新		$sql ="UPDATE liv_activity_review_date a,(SELECT team_id, DATE_FORMAT( FROM_UNIXTIME( create_time ) , '%Y' ) AS year, DATE_FORMAT( FROM_UNIXTIME( create_time ) , '%c' ) AS					MONTH , DATE_FORMAT( FROM_UNIXTIME( create_time ) , '%e' ) AS DAY , state, type_state, count( 1 ) AS num					FROM `liv_activity_review` WHERE type_state != 'activity' GROUP BY team_id, year,MONTH ,DAY HAVING count( 1 ))b SET a.sign = b.num,a.state = b.state,					a.type_state = b.type_state WHERE a.team_id = b.team_id AND a.year = b.year AND a.month = b.month AND a.day = b.day";		$this->db->query($sql);		//liv_activity_review多于数据删除		$sql = "delete from liv_activity_review where team_id=0";		$this->db->query($sql);		//liv_activity_review_date多于数据删除		$sql = "delete from liv_activity_review_date where type_state='0'";		$this->db->query($sql);		/*活动评论*/		//删除多余活动的评论		$sql = "delete from liv_commtent where action_id in (select * from (SELECT a.action_id FROM liv_commtent a LEFT JOIN liv_activity b ON a.action_id = b.action_id WHERE b.action_id IS NULL  GROUP BY a.action_id)c)";		$this->db->query($sql);		//统一评论的状态		$sql = "update liv_commtent a, (SELECT action_id, state, if( type_state = '', if( state =1, '', 'activity' ) , 'team' ) AS type_state FROM `liv_activity` WHERE 1  )b set a.state=b.state,a.type_state=b.type_state where a.action_id=b.action_id and a.state=1";		$this->db->query($sql);		//更新数据统计		$sql = "update liv_activity set thread_num=0 ";		$this->db->query($sql);		$sql = "update liv_activity a,(SELECT action_id, count( 1 ) as num FROM `liv_commtent` WHERE state=1 GROUP BY action_id HAVING count( 1 ))b set a.thread_num=b.num where a.action_id=b.action_id";		$this->db->query($sql);		/*附件表*/		//更新r_id的值		$sql = "UPDATE liv_material a,(SELECT action_id, id AS r_id, state, type_state FROM `liv_activity_review` GROUP BY action_id) b 					SET a.r_id = b.r_id,a.state = b.state,a.type_state = b.type_state WHERE a.action_id = b.action_id AND a.action_id > 0 and a.r_id=0";		$this->db->query($sql);		$sql = "delete FROM liv_material WHERE action_id >0 AND r_id =0";		$this->db->query($sql);		//重建附件表的索引		$sql = "alter table liv_material drop column `m_id`";		$this->db->query($sql);		$sql = "alter table liv_material add `m_id` int(11) not null primary key auto_increment first";		$this->db->query($sql);		/*视频表*/		//更新字段		$sql = "UPDATE liv_video a,(SELECT action_id,state,type_state FROM `liv_activity_review` GROUP BY action_id)b 					SET a.state = b.state,a.type_state = b.type_state  WHERE a.sid = b.action_id AND a.`source`='activity'";		$this->db->query($sql);		//删除多余的数据		$sql = "delete from liv_video where  sid not in (SELECT action_id FROM `liv_activity_review` GROUP BY action_id) and `source`='activity'";		$this->db->query($sql);		/*赞*/		$this->updatePariseActionNum();		/*标签*/				//更新对应数据		$sql = 'UPDATE `liv_team` t SET `action_num` = (SELECT COUNT(a.action_id) FROM `liv_activity` a WHERE t.team_id = a.team_id AND a.state = 1) WHERE EXISTS (SELECT a.action_id FROM `liv_activity` a WHERE a.team_id = t.team_id AND a.state = 1)';		return $this->db->query($sql);	}		//更新小组下的申请行动召集者数目	private function updateTeamApplyActionNum()	{		//删除对应的小组不存在的话题		$sql = 'DELETE FROM `liv_apply_action` WHERE a_id in (SELECT a_id FROM (SELECT aa.a_id FROM `liv_apply_action` aa LEFT JOIN `liv_team` tm ON aa.team_id = tm.team_id WHERE tm.team_id IS NULL) AS apply_action)';		$this->db->query($sql);				//更新状态		$sql = 'UPDATE `liv_apply_action` aa, (SELECT team_id, IF (state = "-1", 0, 1) AS state FROM `liv_team` WHERE state != 0) t SET aa.status = t.state WHERE aa.team_id = t.team_id';		$this->db->query($sql);				//更新对应数据		$sql = 'UPDATE `liv_team` t, (SELECT team_id, count(a_id) AS num FROM `liv_apply_action` WHERE state = 1 AND status = 1 GROUP BY team_id) aa SET t.apply_num = aa.num WHERE t.team_id = aa.team_id';		return $this->db->query($sql);	}		//更新小组的浏览数	private function updateTeamVisitNum()	{		//删除对应的小组不存在的话题		$sql = 'DELETE FROM `liv_visit` WHERE id in (SELECT id FROM (SELECT v.id FROM (SELECT * FROM `liv_visit` WHERE source = "team") AS v LEFT JOIN `liv_team` tm ON v.cid = tm.team_id WHERE tm.team_id IS NULL) AS visit)';		$this->db->query($sql);				$sql = 'UPDATE `liv_team` t, (SELECT cid, SUM(num) AS num FROM `liv_visit` WHERE source = "team" GROUP BY cid) v SET t.apply_num = v.num WHERE t.team_id = v.cid';		return $this->db->query($sql);	}		//更新黑名单数据	private function updateTeamBlackList()	{		$sql = 'DELETE FROM `liv_team_blacklist` WHERE black_id in (SELECT black_id FROM (SELECT tb.black_id FROM `liv_team_blacklist` tb LEFT JOIN `liv_team` tm ON tb.team_id = tm.team_id WHERE tm.team_id IS NULL) AS blacklist)';		$this->db->query($sql);				//更新状态		$sql = 'UPDATE `liv_team_blacklist` tb, (SELECT team_id, IF (state = "-1", 0, 1) AS state FROM `liv_team` WHERE state != 0) t SET tb.status = t.state WHERE tb.team_id = t.team_id';		return $this->db->query($sql);	}		//更新申请小组的数据	private function updateTeamApply()	{		$sql = 'DELETE FROM `liv_team_apply` WHERE id in (SELECT id FROM (SELECT ta.id FROM `liv_team_apply` ta LEFT JOIN `liv_team` tm ON ta.team_id = tm.team_id WHERE ta.team_id != 0 AND tm.team_id IS NULL) AS teamapply)';		$this->db->query($sql);				//更新状态		$sql = 'UPDATE `liv_team_apply` ta, (SELECT team_id, IF (state = "-1", 0, 1) AS state FROM `liv_team` WHERE state != 0) t SET ta.status = t.state WHERE ta.team_id = t.team_id';		return $this->db->query($sql);	}		//-------------------------------------------------------------------------------------------	private function updatePariseActionNum()	{		//先查询赞信息		$option = new option();		$favor = $option->get_attention('activity', 'parise');		if($favor)		{			$topic_ids = array();			foreach ($favor as $k => $v)			{				$topic_ids[] = $k;				//更新话题赞数据				$sql = 'UPDATE `liv_activity` SET `praise_num` = ' . count($v) . ' WHERE action_id = ' . $k;				$result = $this->db->query($sql);			}			if ($topic_ids)			{				$sql = 'SELECT action_id, state,type_state FROM `liv_activity` WHERE action_id in (' . implode(',', $topic_ids) . ')';				$query = $this->db->query($sql);				$info = array();				$state = array();				$type = array();				while ($row = $this->db->fetch_array($query))				{					$info[$row['action_id']] = $row['action_id'];					$state[$row['action_id']] = $row['state'];					$type[$row['action_id']] = $row['type_state'];				}				$del_ids = '';				$set_true = '';//更新小组的删除				$set_false = '';//更新其他删除				$update_ids = array();				if ($info && $state && $type)				{					foreach($topic_ids as $k=>$v)					{						if(!in_array($k,$info))						{							$dp = ($del_ids) ? "," : "";							$del_ids .= $dp . $v;						}						else 						{							if($type[$k] =='team')							{								$tp = ($set_true) ? "," : "";								$set_true .= $tp . $v;							}							else if($type[$k] =='' && $state[$k] == 0)							{								$fp = ($set_false) ? "," : "";								$set_false .= $fp . $v;							}							else 							{								//UNTODO							}						}					}				}			}			$option->del_attention($del_ids, $set_true, $set_false,'activity');		}		return $result;	}		//更新话题下的赞的数目	private function updateTopicFavorNum()	{		//先查询赞信息		$option = new option();		$favor = $option->get_attention('topic', 'favor');		if($favor)		{			$topic_ids = array();			foreach ($favor as $k => $v)			{				$topic_ids[] = $k;				//更新话题赞数据				$sql = 'UPDATE `liv_topic` SET `favor_num` = ' . count($v) . ' WHERE topic_id = ' . $k;				$result = $this->db->query($sql);			}			if ($topic_ids)			{				$sql = 'SELECT topic_id, state, type_state FROM `liv_topic` WHERE topic_id in (' . implode(',', $topic_ids) . ')';				$query = $this->db->query($sql);				$info = array();				$type = $state = array();				while ($row = $this->db->fetch_array($query))				{					$info[] = $row['topic_id'];					$state[$row['topic_id']] = $row['state'];					$type[$row['topic_id']] = $row['type_state'];				}				$del_ids = '';				$set_true = '';				$set_false = '';				$update_ids = array();				if ($info && $state && $type)				{					foreach ($topic_ids as $v)					{						if(!in_array($k,$info))						{							$dp = ($del_ids) ? "," : "";							$del_ids .= $dp . $v;						}						else 						{							if($type[$k] =='team')							{								$tp = ($set_true) ? "," : "";								$set_true .= $tp . $v;							}							else if($type[$k] =='' && $state[$k] == 0)							{								$fp = ($set_false) ? "," : "";								$set_false .= $fp . $v;							}							else 							{								//UNTODO							}						}					}				}				$del_ids = trim($del_ids, ',');				$set_true = trim($set_true, ',');				$set_false = trim($set_false, ',');			}			$option->del_attention($del_ids, $set_true, $set_false,'topic');		}		return $result;	}		//更新话题下的附件数目	private function updateTopicMaterialNum()	{		//删除对应不存在的话题的附件		$sql = 'DELETE FROM `liv_material` WHERE m_id in (SELECT m_id FROM (SELECT m.m_id FROM `liv_material` m LEFT JOIN `liv_topic` t ON m.topic_id = t.topic_id WHERE m.topic_id > 0 AND t.topic_id IS NULL) AS material)';		$this->db->query($sql);				//更新状态		$sql = 'UPDATE `liv_material` m, (SELECT topic_id, IF (type_state = "", "topic", "team") AS type_state FROM `liv_topic` WHERE state = 0) AS tc SET m.state = 0, m.type_state = tc.type_state WHERE m.topic_id = tc.topic_id';		$this->db->query($sql);				//更新话题对应的数据		$sql = 'UPDATE `liv_topic` tc, (SELECT topic_id, count(m_id) AS num FROM `liv_material` WHERE state = 1 AND topic_id != 0 GROUP BY topic_id) m SET tc.material_num = m.num WHERE tc.topic_id = m.topic_id';		return $this->db->query($sql);	}		//更新话题对应的视频数据	private function updateTopicVideo()	{		//删除对应不存在的话题的视频		$sql = 'DELETE FROM `liv_video` WHERE id in (SELECT id FROM (SELECT v.id FROM (SELECT * FROM `liv_video` WHERE source = "topic") AS v LEFT JOIN `liv_topic` t ON v.sid = t.topic_id WHERE t.topic_id IS NULL) AS video)';		$this->db->query($sql);				//更新状态		$sql = 'UPDATE `liv_video` v, (SELECT topic_id, IF (type_state = "", "topic", "team") AS type_state FROM `liv_topic` WHERE state = 0) AS tc SET v.state = 0, v.type_state = tc.type_state WHERE v.sid = tc.topic_id';		return $this->db->query($sql);	}		//更新话题下的回复数目	private function updateTopicReplyNum()	{		//删除对应不存在的数据		$sql = 'DELETE FROM `liv_topic_reply` WHERE rid in (SELECT rid FROM (SELECT tr.rid FROM `liv_topic_reply` tr LEFT JOIN `liv_topic` t ON tr.topic_id = t.topic_id WHERE t.topic_id IS NULL) AS reply)';		$this->db->query($sql);				//更新对应的状态		$sql = 'UPDATE `liv_topic_reply` tr, (SELECT topic_id, IF (type_state = "", "topic", "team") AS type_state FROM `liv_topic` WHERE state = 0) AS tc SET tr.state = 0, tr.type_state = tc.type_state WHERE tr.topic_id = tc.topic_id';		$this->db->query($sql);				//更新话题的回复数目		$sql = 'UPDATE `liv_topic` tc, (SELECT topic_id, count(rid) AS num FROM `liv_topic_reply` WHERE state = 1 AND reply_user_id != 0 GROUP BY topic_id) tr SET tc.replies = tr.num WHERE tc.topic_id = tr.topic_id';		return $this->db->query($sql);	}		//更新话题下的浏览数	private function updateTopicVisitNum()	{		//删除对应的小组不存在的话题		$sql = 'DELETE FROM `liv_visit` WHERE id in (SELECT id FROM (SELECT v.id FROM (SELECT * FROM `liv_visit` WHERE source = "team") AS v LEFT JOIN `liv_team` tm ON v.cid = tm.team_id WHERE tm.team_id IS NULL) AS visit)';		$this->db->query($sql);				$sql = 'UPDATE `liv_topic` tc, (SELECT cid, SUM(num) AS num FROM `liv_visit` WHERE source = "topic" GROUP BY cid) v SET tc.views = v.num WHERE tc.topic_id = v.cid';		return $this->db->query($sql);	}		/**	 * 方法不存在的时候调用的方法	 */	public function none()	{		$this->errorOutput('调用的方法不存在');	}}$out = new checkDataApi();$action = $_INPUT['a'];if (!method_exists($out,$action)){	$action = 'none';}$out->$action();