$(function() {	$('.thread_reply_content_my').focus(function(){		if($(this).val() == '说点什么吧...')		{			$(this).val('');		}	});		$('.thread_reply_content_my').blur(function(){		if(!$(this).val())		{			$(this).val('说点什么吧...');		}	});			$('#status_form').submit(function(){		if(this.content.value == '说点什么吧...' || this.content.value == '')		{			this.content.value = '';			$("#content").css('background-color','rgb(255, 200, 200)');	    	setTimeout("$('#content').css('background-color','rgb(255, 255, 255)')",600);	    	return false;		}		$.ajax({			type : 'post',			url : 'member.php',			dataType : 'html',   			cache: false,   			timeout: TIME_OUT,			data : {					content: this.content.value,					is_my_page:this.is_my_page.value,					media_id:this.media_id.value,					type:this.type.value,					ajax:1,		        	a: "update_weibo"		        },			success : function(json) {			var obj = new Function("return" + json)();				eval(obj.callback);			},			beforeSend : function() {				hg_status_stop();				//jAlert(1);				//$('#tabCon').html('<br /><img src="'+RESOURCE_URL+'loading.gif" />');			}		});		return false;	});		addFriends = function(id,relation,types,isMyPage){		var target = '#target_' + id;		$.ajax({			type: 'POST',			url: "member.php",			dataType: 'html',			timeout: TIME_OUT,			cache: false,			data: {				a: "create_follow",				id: id			},			error: function(){				jAlert('Ajax request error!');			},			success: function(json){										if(relation == 4)				{					if(isMyPage)					{						$("#attention_count").html(parseInt($("#attention_count").html())+1);					}				}								if(relation == 3)				{					if(isMyPage)					{						$("#followers_count").html(parseInt($("#followers_count").html())+1);					}				}				switch(types)				{					case 'vip':						if(relation == 4)						{							$(target).html('<a href="javascript:void(0);" onclick="delFriends(' + id + ',\'vip\')">-关注</a>&nbsp;&nbsp;<a>已关注</a>');						}												if(relation == 3)						{							$(target).html('<a href="javascript:void(0);" onclick="delFriends(' + id + ',\'vip\')">-关注</a>&nbsp;&nbsp;<a>相互关注</a>');						}					break;					default:						if(relation == 4)						{							$(target).html('<a>已关注</a><a href="javascript:void(0);" class="relative-del" onclick="delFriends(' + id + ')">解除关注</a>');						}												if(relation == 3)						{							$(target).html('<a>相互关注</a><a href="javascript:void(0);" class="relative-del" onclick="delFriends('+ id + ')">解除关注</a>');						}					break;				}			}		});	}		delFriends = function(id,types,isMyPage){		var target = '#target_' + id;		$.ajax({			type: 'POST',			url: "member.php",			dataType: 'html',			timeout: TIME_OUT,			cache: false,			data: {				a: "destroy_follow",				id: id			},			error: function(){				jAlert('Ajax request error!');			},			success: function(json){				if(json == 4)				{					if(isMyPage)					{						$("#attention_count").html(parseInt($("#attention_count").html())-1);					}				}				if(json == 3)				{					if(isMyPage)					{						$("#followers_count").html(parseInt($("#followers_count").html())-1);					}				}				switch(types)				{					case 'vip':							$(target).html('<a href="javascript:void(0);" onclick="addFriends(' + id + ',' + json + ',\'vip\')">+关注</a>');					break;					default:													$(target).html('<a href="javascript:void(0);" class="relative-add" onclick="addFriends(' + id + ',' + json + ')">加关注</a>');					break;				}			}		});	}			function hg_status_show(html)	{		$("#statusList").after(html);		hg_status_clear();	}		function hg_status_clear()	{		$("#content").attr('disabled',false);		$(".thread_reply_btn_my").attr('disabled',false);		var theform = document.getElementById('status_form');		theform.content.value = '说点什么吧...';		}		function hg_status_stop()	{		$("#content").attr('disabled',true);		$(".thread_reply_btn_my").attr('disabled',true);		closedThis();	}		var vipPage = 1;	$("#change_vip").click(function() {		$.ajax({			url: 'member.php',			type: 'POST',			dataType: 'html',			timeout: TIME_OUT,				cache: false,			data: {				a:'ajax_get_vip',				page:vipPage,				ajax:1,				is_my_page:$("#is_my_page").val(),				total:$('#vip_nums').val(),				uid:$('#vip_nums').val()			},		        			error: function() {							},				success: function(json) {			var obj = new Function("return" + json)();				vipPage++;					if(vipPage == $('#vip_nums').val())				{					vipPage = 0;				}				eval(obj.callback);						        			}				});			});	function hg_show_vipUser(html)	{		$('#vip').html(html);	}	allPublishTime = [];	/*定时更新微博的发布时间*/	update_publish_time = function ()	{		var time_date = new Array();		var allTimeStamp = $('.timestamp');		var allPublishTime = $('.publishtime');		var len = $('.timestamp').length;		for(var i = 0 ; i < len ; i++)		{			allPublishTime[i].innerHTML = show_time_format(allTimeStamp[i].value , allPublishTime[i].innerHTML);		}		};	/*返回指定的时间格式*/	function show_time_format(time_stamp , publish_time)	{		var timestamp = (Date.parse(new Date()))/1000; /*当前时间戳*/		var time_format = '';			var seconds = parseInt(timestamp) - parseInt(time_stamp);		if(seconds < 60)		{			time_format = seconds + '秒前';			}		else if(seconds >= 60 && seconds < 3600)		{			time_format = parseInt(seconds/60) + '分钟前';		}		else		{			time_format = publish_time;		}		return time_format;			};	var state = self.setInterval('update_publish_time()' , 60000); /*每隔一分钟更新一次微博发布时间*/		//增加话题格式	add_topic_rule = function(id){	//	clear_menu();		var theform = document.getElementById('status_form');		if(theform.content.value == '说点什么吧...')		{			theform.content.value = '';		}			var obj = document.getElementById(id);		var rules = '请在这里输入自定义话题';		var val = obj.value;		var numS = 1;		var numE = -1;		if(val=='')		{			obj.value = "#"+rules+"#";			//countChar();		}		else 			{				if(obj.value.indexOf(rules)==-1)				{					obj.value = val + "#"+rules+"#";						//countChar();				}				numS = obj.value.indexOf(rules);					var dump = rules.length + numS;				if(obj.value.length > dump)				{					numE = dump - obj.value.length;				}			}		if(obj.createTextRange)		{//IE浏览器					    var range = obj.createTextRange();		    range.moveEnd("character",numE);		    range.moveStart("character",numS);		    range.select();		}else{//非IE浏览器			obj.setSelectionRange(numS, numS + rules.length);			obj.focus();		}	};			show_smiles_form = function(cid,sid)	{		if(!$("#"+sid).html())		{			$.ajax({				type: 'POST',				url: "member.php",				dataType: 'html',				timeout: TIME_OUT,				cache: false,				data: {					//ajax:1,					a: "getSmiles",					cid: cid				},				error: function(){					jAlert('Ajax request error!');				},				success: function(json){					$("#"+sid).html(json).show();				    $('#face_box .biaoqing-img img').biaoqing({				        callback : function(){				            $('#face_box').hide();				        }				    });								    var stateBox = true;				    $('.my_icon').on('click', function(){				        stateBox = !!$('#face_box').is(':visible');				    });				    $(document).on('click', function(event){				        if(!stateBox) return;				        var target = $(event.target);				        if(target.closest('#face_box').length || target.is('#face_box') || target.closest('.my_icon').length || target.is('.my_icon')){				            return;				        }				        $('#face_box').hide();				        stateBox = false;				    });				}			});		}		else		{			if($("#"+sid).is(":hidden"))			{				$("#"+sid).show();			}			else			{				$("#"+sid).hide();			}							}	};		face_show_change = function(e,sid,hid)	{		$("#face_show_" + hid).siblings().show();		$("#face_show_" + sid).siblings().hide();		$(".biaoqing-control a").attr('class','biaoqing-off');		$(e).attr('class','biaoqing-on');	};			show_upload_form = function()	{		$(".upload_form").show(500);	};		pic_init = function(){        $('#image-file').off('change').on('change', function(){            $(this).parent().submit();            $(this).replaceWith('<input type="file" id="image-file" name="Filedata"/>');            pic_init();        });    }    pic_init();    imagesImgCallback = function(json)    {		if(json == 'error')		{			jAlert("图片尺寸太大！");			closedThis();		}		else		{			var obj = new Function("return" + json)();			var src = obj.host + obj.dir + '200x/' + obj.filepath + obj.filename;			$(".images-button").hide();            $('#weibo-img').attr('src', src);            $("#imgurl").html(obj.filename);            $("#media_id").val(obj.id);            $(".images-view").show();            if($("#content").val() == '说点什么吧...')            {	            $("#content").val('');            }            $("#content").val($("#content").val()+'分享图片');            $("#type").val($("#type").val()+'0');		}    };        closedThis = function()    {	    $(".images-button").show();        $('#weibo-img').attr('src', '');        $("#imgurl").html('');        $(".images-view").hide();		$(".upload_form").hide(500);		$("#media_id").val(0);		$("#content").val($("#content").val().replace(/分享图片/,""));		$("#type").val('');    };        del_img = function()    {    	jConfirm('确定删除图片！？', '删除提醒', function(yes) {    		if (yes) {    			$.ajax({					type: 'POST',					url: "member.php",					dataType: 'html',					timeout: TIME_OUT,					cache: false,					data: {						ajax:1,						a: "deletepic",						id: $("#media_id").val()					},					error: function(){						jAlert('Ajax request error!');					},					success: function(json){						if(json == $("#media_id").val())						{							closedThis();						}					}				});    		}    	});    };		delete_weibo = function(id, obj){		jConfirm('您确认删除此条记录吗？', '删除提醒', function(yes) {			if (yes) {				$.ajax({					type: 'POST',					url: "member.php",					dataType: 'html',					timeout: TIME_OUT,					cache: false,					data: {						ajax:1,						a: "delete_weibo",						id: id					},					error: function(){						jAlert('Ajax request error!');					},					success: function(json){						if(json)						{							$("#status_"+json).remove();						}					}				});			}			}).position( $(obj) );	};		add_comment = function(id)	{		if(!id)		{			return false;		}		var theform = document.getElementById('comment_form_' + id);		if(!theform.text.value)		{			theform.text.style.backgroundColor = 'rgb(255, 200, 200)';	    	setTimeout("comment_color(" + id + ")",600);	    	return false;		}		else		{			$.ajax({				type: 'POST',				url: "member.php",				dataType: 'html',				timeout: TIME_OUT,				cache: false,				data: {					ajax:1,					a: "comment",					status_id:id,					text:theform.text.value,					reply_id:theform.reply_id.value					//transmit_type:0				},				error: function(){					jAlert('Ajax request error!');				},				success: function(json){					$("#comment_num_" + id).html(parseInt($("#comment_num_" + id).html())+1);					var obj = new Function("return" + json)();					eval(obj.callback);				}			});			return false;		}	};		comment_color = function(id)	{		var theform = document.getElementById('comment_form_' + id);		theform.text.style.backgroundColor = 'rgb(255, 255, 255)';	};	window.bindEventForStatusLine = function () {		$(".gtalk_reply_btn, .t_reply_btn").hide();		$(".gtalk_reply_content, .t_reply_content").click(function(){				$(".gtalk_reply_btn, .t_reply_btn").hide();				if($(this).val() == "回应...")				{					$(this).val("");				}				$(this).addClass("active").siblings(".gtalk_reply_btn, .t_reply_btn").show();				var status_id = $(this).parent().children('input[name="status_id"]').val();				if($("#comment_list_" + status_id).html())				{					$("#comment_list_" + status_id).show();				}				else				{					$.ajax({						type: 'POST',						url: "member.php",						dataType: 'html',						timeout: TIME_OUT,						cache: false,						data: {							ajax:1,							a: "show_comment",							status_id:status_id							//transmit_type:0						},						error: function(){							jAlert('Ajax request error!');						},						success: function(json){					//	jAlert(json);							var obj = new Function("return" + json)();							eval(obj.callback);						}					});				}									}).blur(function(){				$(this).removeClass("active");				if($(this).val() == "")				{					$(this).val("回应...");				}				//$("#comment_list_"+$(this).parent().children('input[name="status_id"]').val()).hide();		});	}	window.bindEventForStatusLine();		delete_comment = function(id,status_id, obj)	{		var me = $(obj);		jConfirm('您确认删除此条记录吗？', '删除提醒', function(yes) {			if (yes) {				$.ajax({					type: 'POST',					url: "member.php",					dataType: 'html',					timeout: TIME_OUT,					cache: false,					data: {						ajax:1,						a: "del_comment",						cid:id						//transmit_type:0					},					error: function(){						jAlert('Ajax request error!');					},					success: function(json){						//jAlert(json);						if(json)						{							$("#comment_li_"+json).remove();							$("#comment_num_" + status_id).html(parseInt($("#comment_num_" + status_id).html())-1);							if(!parseInt($("#comment_num_" + status_id).html()))							{								$("#comment_ul_" + status_id).html('<li class="clearfix" id="comment_null_' + status_id + '">暂无评论</li>');							}						}						else						{							jAlert('删除失败');						}					}				});				}		}).position(me);	};		reply_comment = function(id,status_id)	{		var str = $("#comment_li_"+id).children("div .t_comment_det").children("a,.t_comment_author").html();		var theform = document.getElementById('comment_form_' + status_id);		theform.text.value = '回复 @'+ str;		theform.text.focus();		theform.reply_id.value = id;			};		close_comment = function(id) {		$("#comment_list_"+id).hide();	};		praise = function(e,id)	{		//jAlert(id);		var type = 0;		if($(e).attr('class') == "btFeed"){			type = 0;		}				if($(e).attr('class') == "btFeed_hover"){			type = 1;		}		$.ajax({				type: 'POST',				url: "member.php",				dataType: 'html',				timeout: TIME_OUT,				cache: false,				data: {					ajax:1,					a: "praise",					type:type,					id:id				},				error: function(){					jAlert('Ajax request error!');				},				success: function(json){					//jAlert(json);										var obj = new Function("return" + json)();					if(obj.ret)					{						if(parseInt(obj.type))						{							$(e).attr('class','btFeed');						}						else						{							$(e).attr('class','btFeed_hover');													}					}					else					{						jAlert('操作失误！');					}				}			});		};	function hg_all_comment(html,id)	{		$("#comment_list_"+id).html(html);		$("#comment_list_"+id).show();	};		function hg_append_comment(html,status_id)	{		if($("#comment_null_" + status_id).html())		{			$("#comment_null_" + status_id).remove();		}		var theform = document.getElementById('comment_form_' + status_id);		theform.text.value = '回应...';		theform.reply_id.value = 0;		$("#comment_ul_" + status_id).prepend(html);			};});//一个控制器，放在jQuery命名空间下void function ($) {	if (!Object.create) {		Object.create = function (obj) {			var func = function () {};			func.prototype = obj;			return new func;		}	}	var createNewPubSub = function () {		var o = $({});		return {			on: function () {				o.on.apply(o, arguments);				return this;			},			off: function () {				o.off.apply(o, arguments);				return this;			},			trigger: function () {				o.trigger.apply(o, arguments);				return this;			}		};	};	$.Controller = {		prototype: {			init: function () {},			proxyMethod: function () {				for ( var method in (this.proxied || []) ) {					method = this.proxied[method];					this[method] = this.proxy(this[method]);				}				return this;			},			refreshElements: function () {				for (var selector in (this.elements || []) ) {					this[this.elements[selector]] = this.el.find(selector);				}				return this;			},			subAllEvents: function () {				var method, match, eventName, selector;				for (var key in (this.events || []) ) {					method = this[this.events[key]];					match = key.match(this.eventSplitter);					eventName = match[1];					selector = match[2];					if (selector) {						this.el.on( eventName, selector, method);					} else {						this.el.on( eventName, method );					}				}				return this;			},			eventSplitter: /^(\w+)\s*(.*)$/,			proxy: function (func) { 				return $.proxy(func, this); 			}		},		create: function(obj) {			var o = Object.create(this);			o.parent = this;			o.prototype = o.fn = Object.create(this.prototype);			o.extend(createNewPubSub());			if (obj) o.include(obj);			return o;		},		init: function (obj) {			var instance = Object.create(this.prototype);			instance.parent = this;			$.extend(instance, obj);			instance.el = (obj && obj.el) || $('<div></div>');			instance				.proxyMethod()				.refreshElements()				.subAllEvents()				.init();			return instance;		},		extend: function(obj) { 			$.extend(this, obj); 		},		include: function(obj) { 			$.extend(this.fn, obj); 		}	};	//把订阅发布事件的能力mix进控制器中，作为所有子控制器的全局信道	$.Controller.extend(createNewPubSub());} ($);$(function ($) {	var App = $.Controller;		MsgBox = $.Controller.create({		proxied: ['render', 'closeView', 'count', 'submit', 'toggleFaceBox'],		elements: {			'.mail-del': 'closeBtn',			'.mail-txtarea': 'content',			'.tip-span': 'label',			'[name=textfield]': 'address',			'.mail-face-box': 'faceBox'		},		events: {			'click .mail-del': 'closeView',			'keyup .mail-txtarea': 'count',			'click .face-btn': 'toggleFaceBox',			'click .mail-btn-public:not(.active)': 'submit'		},		init: function () {			App.on('show.msg', this.render);		},		render: function (e, uid) {			this.content.val('');			this.label.html('还能输入<em>' + 140 + '</em>字');			this.faceBox.hide();			this.textNum = 140;			this.el.css({				left: ($(document).width() - this.el.outerWidth()) / 2			}).show();			this.mask.trigger('_show');			this.uid = uid;			return false;		},		toggleFaceBox: function (e) {			var faceBtn = $(e.target);			if(!this.faceBox.html()) {				this.faceBox.html('加载中...').show();				$.get('member.php?a=getSmiles', $.proxy(function (html) {					this.faceBox.html(html);					this.faceBox.find('.biaoqing-img img').biaoqing({				        callback : $.proxy(function(){				            this.faceBox.hide();				        }, this),				        textarea: this.content				    });				}, this), 'html');			} else {				this.faceBox.toggle();			}		},		count: function () {			var limit = 140, num = limit- this.countStr( $.trim(this.content.val()) );			this.textNum = num;			if (num < 0) {				this.label.html('超出<em class="error">' + (-num) + '</em>字')			} else {				this.label.html('还能输入<em>' + num + '</em>字')			}		},		submit: function (e) {			var submitBtn = $(e.target).addClass('active');			if (this.verifySubmit(submitBtn)) {				this.postAjax(submitBtn);			}		},		verifySubmit: function (submitBtn) {			var hasAddress;			hasAddress = this.address.val() || this.address.text() ? true : false;			if ( !hasAddress || this.textNum < 0 || this.textNum == 140) {				var element, prop, v1, v2,  fn1, fn2, fn;				if ( !hasAddress || this.textNum == 140 ) {					element = !hasAddress ? this.address : this.content;					prop = 'background-color'; v1 = '#faffbd'; v2 = '';				} else {					element = this.label;					prop = 'opacity'; v1 = 0; v2 = 1;				}				fn = fn1 = function () { element.css(prop, v1); };				fn2 = function () { element.css(prop, v2); };				for (var i = 0; i < 6; i++) {					if (i != 5) {						setTimeout(fn, 150 * i)						fn = fn == fn1 ? fn2 : fn1;					} else {						setTimeout(function () {							fn();							submitBtn.removeClass('active');						}, 150 * i);					}				}				return false;			}			return true;		},		postAjax: function (submitBtn) {			var url = './member.php?a=privateMessage&uid=' + this.uid;			$.post(url, {content: this.content.val()}, this.proxy(function (data) {				var success = !data.error;				if (success) {					this.postSuccess(submitBtn);				} else {					this.postFail(submitBtn);				}			}), 'json' );		},		postSuccess: function (submitBtn) {			this.el.hide();			this.tip.text('发送成功').css({				left: ($(document).width() - this.tip.outerWidth()) / 2			}).show();			setTimeout($.proxy(function () {				this.tip.hide();				this.closeView();			}, this), 1000);			submitBtn.removeClass('active');		},		postFail: function (submitBtn) {			this.tip.text('发送失败，请重试').css({				left: ($(document).width() - this.tip.outerWidth()) / 2			}).show();			setTimeout($.proxy(function () {				this.tip.hide();				submitBtn.removeClass('active');			}, this), 1000);		},		closeView: function () {			this.mask.trigger('_hide');			this.el.hide();		},		countStr: function count(text) {			var i, sum = 0, halfExist = false;			for (i = 0; i < text.length; i++) {				if ( text.charCodeAt(i) < 128 ) {					halfExist || sum++;					halfExist = !halfExist;				} else {					sum++;				}			}			return sum;		},		textNum: 140,		mask: $.createMask(),		tip: $('<div class="msg-tip"></div>').appendTo($('body'))	});	MsgBox.init({el: $('#person-mail')});	$('.my_zhu_msg a').click( function () {		App.trigger('show.msg', [$(this).data('uid')]);	});		var btnSet = '[id^=status_]';	btnSet = $(btnSet);	btnSet.on('click', '.t_by_relay', function () {		var relayBtn = $(this);		App.trigger('show.relay', [relayBtn.data('uid'), relayBtn.data('id'), relayBtn.data('src'), relayBtn.find('span').html(), $('#is_my_page').val()] );	});		//覆盖父控制器的一些方法	var relayBox = MsgBox.init({		el: $('#relay-box'),		init: function () {			this.elements = $.extend(this.elements, {				'.weibo-content': 'weibo',				'.weibo-content div:first img': 'weiboImg',				'.weibo-content div:eq(1)': 'weiboContent'			});			this.refreshElements();			this.el.css({				position: 'fixed',				top: '20%'			});			this.tip.css({				position: 'fixed',				top: '35%'			});			App.on('show.relay', this.render);		},		render: function (e, uid, id, src, content, is_my_page) {			this.weiboId = id;			this.is_my_page = is_my_page;			this.weiboImg.attr('src', src);			this.weiboContent.html(content);			return this.parent.prototype.render.call(this, e, uid);		},		verifySubmit: function (submitBtn) {			//欺骗父控制器的此方法，让其以为有地址和内容			this.address = $('<div>anything</div>');			this.textNum < 0 || (this.textNum = 1); 			return this.parent.prototype.verifySubmit.call(this, submitBtn);		},		postAjax: function (submitBtn) {			var url = './member.php?a=update_weibo';			$.post(url, {content: this.content.val(), reply_status_id: this.weiboId, reply_user_id: this.uid, is_my_page: this.is_my_page || 0}, this.proxy(function (data) {				try {					data= $.pareJSON(data)					var success = !data.error;					if (success) {						this.postSuccess(submitBtn);					} else {						this.postFail(submitBtn);					}				} catch (e) {					this.el.hide();					this.tip.text('无数据返回，不明情况').css({						left: ($(document).width() - this.tip.outerWidth()) / 2					}).show();					setTimeout($.proxy(function () {						this.tip.hide();						this.closeView();					}, this), 1000);					submitBtn.removeClass('active');				}			}));		}	});});